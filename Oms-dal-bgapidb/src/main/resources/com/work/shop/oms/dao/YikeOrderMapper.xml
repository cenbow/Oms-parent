<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.work.shop.oms.dao.YikeOrderMapper">
  <resultMap id="BaseResultMap" type="com.work.shop.oms.bean.bgapidb.YikeOrder">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="bar_code" jdbcType="VARCHAR" property="barCode" />
    <result column="item_no" jdbcType="VARCHAR" property="itemNo" />
    <result column="price_sell" jdbcType="DECIMAL" property="priceSell" />
    <result column="price_original" jdbcType="DECIMAL" property="priceOriginal" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="discount_money" jdbcType="DECIMAL" property="discountMoney" />
    <result column="discount_amount" jdbcType="DECIMAL" property="discountAmount" />
    <result column="fr_discount_amount" jdbcType="DECIMAL" property="frDiscountAmount" />
    <result column="coupon_discount_amount" jdbcType="DECIMAL" property="couponDiscountAmount" />
    <result column="reward_fee" jdbcType="DECIMAL" property="rewardFee" />
    <result column="use_bonus" jdbcType="INTEGER" property="useBonus" />
    <result column="is_gift" jdbcType="VARCHAR" property="isGift" />
    <result column="return_quantity" jdbcType="VARCHAR" property="returnQuantity" />
    <result column="return_price" jdbcType="DECIMAL" property="returnPrice" />
    <result column="return_money" jdbcType="DECIMAL" property="returnMoney" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="product_name" jdbcType="VARCHAR" property="productName" />
    <result column="use_coupon_value" jdbcType="VARCHAR" property="useCouponValue" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, code, bar_code, item_no, price_sell, price_original, amount, discount_money, 
    discount_amount, fr_discount_amount, coupon_discount_amount, reward_fee, use_bonus, 
    is_gift, return_quantity, return_price, return_money, quantity, product_name, use_coupon_value
  </sql>
  <select id="selectByExample" parameterType="com.work.shop.oms.bean.bgapidb.YikeOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from yike_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="criteria.valid">
      <foreach collection="criteria.criteria" item="criterion">
        <if test="criterion.limitValue">
          limit ${criterion.value},${criterion.secondValue}
        </if>
      </foreach>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from yike_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from yike_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.work.shop.oms.bean.bgapidb.YikeOrderExample">
    delete from yike_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.work.shop.oms.bean.bgapidb.YikeOrder">
    insert into yike_order (id, code, bar_code, 
      item_no, price_sell, price_original, 
      amount, discount_money, discount_amount, 
      fr_discount_amount, coupon_discount_amount, 
      reward_fee, use_bonus, is_gift, 
      return_quantity, return_price, return_money, 
      quantity, product_name, use_coupon_value
      )
    values (#{id,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{barCode,jdbcType=VARCHAR}, 
      #{itemNo,jdbcType=VARCHAR}, #{priceSell,jdbcType=DECIMAL}, #{priceOriginal,jdbcType=DECIMAL}, 
      #{amount,jdbcType=DECIMAL}, #{discountMoney,jdbcType=DECIMAL}, #{discountAmount,jdbcType=DECIMAL}, 
      #{frDiscountAmount,jdbcType=DECIMAL}, #{couponDiscountAmount,jdbcType=DECIMAL}, 
      #{rewardFee,jdbcType=DECIMAL}, #{useBonus,jdbcType=INTEGER}, #{isGift,jdbcType=VARCHAR}, 
      #{returnQuantity,jdbcType=VARCHAR}, #{returnPrice,jdbcType=DECIMAL}, #{returnMoney,jdbcType=DECIMAL}, 
      #{quantity,jdbcType=INTEGER}, #{productName,jdbcType=VARCHAR}, #{useCouponValue,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.work.shop.oms.bean.bgapidb.YikeOrder">
    insert into yike_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="barCode != null">
        bar_code,
      </if>
      <if test="itemNo != null">
        item_no,
      </if>
      <if test="priceSell != null">
        price_sell,
      </if>
      <if test="priceOriginal != null">
        price_original,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="discountMoney != null">
        discount_money,
      </if>
      <if test="discountAmount != null">
        discount_amount,
      </if>
      <if test="frDiscountAmount != null">
        fr_discount_amount,
      </if>
      <if test="couponDiscountAmount != null">
        coupon_discount_amount,
      </if>
      <if test="rewardFee != null">
        reward_fee,
      </if>
      <if test="useBonus != null">
        use_bonus,
      </if>
      <if test="isGift != null">
        is_gift,
      </if>
      <if test="returnQuantity != null">
        return_quantity,
      </if>
      <if test="returnPrice != null">
        return_price,
      </if>
      <if test="returnMoney != null">
        return_money,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="productName != null">
        product_name,
      </if>
      <if test="useCouponValue != null">
        use_coupon_value,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="barCode != null">
        #{barCode,jdbcType=VARCHAR},
      </if>
      <if test="itemNo != null">
        #{itemNo,jdbcType=VARCHAR},
      </if>
      <if test="priceSell != null">
        #{priceSell,jdbcType=DECIMAL},
      </if>
      <if test="priceOriginal != null">
        #{priceOriginal,jdbcType=DECIMAL},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="discountMoney != null">
        #{discountMoney,jdbcType=DECIMAL},
      </if>
      <if test="discountAmount != null">
        #{discountAmount,jdbcType=DECIMAL},
      </if>
      <if test="frDiscountAmount != null">
        #{frDiscountAmount,jdbcType=DECIMAL},
      </if>
      <if test="couponDiscountAmount != null">
        #{couponDiscountAmount,jdbcType=DECIMAL},
      </if>
      <if test="rewardFee != null">
        #{rewardFee,jdbcType=DECIMAL},
      </if>
      <if test="useBonus != null">
        #{useBonus,jdbcType=INTEGER},
      </if>
      <if test="isGift != null">
        #{isGift,jdbcType=VARCHAR},
      </if>
      <if test="returnQuantity != null">
        #{returnQuantity,jdbcType=VARCHAR},
      </if>
      <if test="returnPrice != null">
        #{returnPrice,jdbcType=DECIMAL},
      </if>
      <if test="returnMoney != null">
        #{returnMoney,jdbcType=DECIMAL},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="productName != null">
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="useCouponValue != null">
        #{useCouponValue,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.work.shop.oms.bean.bgapidb.YikeOrderExample" resultType="java.lang.Integer">
    select count(*) from yike_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update yike_order
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.barCode != null">
        bar_code = #{record.barCode,jdbcType=VARCHAR},
      </if>
      <if test="record.itemNo != null">
        item_no = #{record.itemNo,jdbcType=VARCHAR},
      </if>
      <if test="record.priceSell != null">
        price_sell = #{record.priceSell,jdbcType=DECIMAL},
      </if>
      <if test="record.priceOriginal != null">
        price_original = #{record.priceOriginal,jdbcType=DECIMAL},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.discountMoney != null">
        discount_money = #{record.discountMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.discountAmount != null">
        discount_amount = #{record.discountAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.frDiscountAmount != null">
        fr_discount_amount = #{record.frDiscountAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.couponDiscountAmount != null">
        coupon_discount_amount = #{record.couponDiscountAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.rewardFee != null">
        reward_fee = #{record.rewardFee,jdbcType=DECIMAL},
      </if>
      <if test="record.useBonus != null">
        use_bonus = #{record.useBonus,jdbcType=INTEGER},
      </if>
      <if test="record.isGift != null">
        is_gift = #{record.isGift,jdbcType=VARCHAR},
      </if>
      <if test="record.returnQuantity != null">
        return_quantity = #{record.returnQuantity,jdbcType=VARCHAR},
      </if>
      <if test="record.returnPrice != null">
        return_price = #{record.returnPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.returnMoney != null">
        return_money = #{record.returnMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.quantity != null">
        quantity = #{record.quantity,jdbcType=INTEGER},
      </if>
      <if test="record.productName != null">
        product_name = #{record.productName,jdbcType=VARCHAR},
      </if>
      <if test="record.useCouponValue != null">
        use_coupon_value = #{record.useCouponValue,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update yike_order
    set id = #{record.id,jdbcType=INTEGER},
      code = #{record.code,jdbcType=VARCHAR},
      bar_code = #{record.barCode,jdbcType=VARCHAR},
      item_no = #{record.itemNo,jdbcType=VARCHAR},
      price_sell = #{record.priceSell,jdbcType=DECIMAL},
      price_original = #{record.priceOriginal,jdbcType=DECIMAL},
      amount = #{record.amount,jdbcType=DECIMAL},
      discount_money = #{record.discountMoney,jdbcType=DECIMAL},
      discount_amount = #{record.discountAmount,jdbcType=DECIMAL},
      fr_discount_amount = #{record.frDiscountAmount,jdbcType=DECIMAL},
      coupon_discount_amount = #{record.couponDiscountAmount,jdbcType=DECIMAL},
      reward_fee = #{record.rewardFee,jdbcType=DECIMAL},
      use_bonus = #{record.useBonus,jdbcType=INTEGER},
      is_gift = #{record.isGift,jdbcType=VARCHAR},
      return_quantity = #{record.returnQuantity,jdbcType=VARCHAR},
      return_price = #{record.returnPrice,jdbcType=DECIMAL},
      return_money = #{record.returnMoney,jdbcType=DECIMAL},
      quantity = #{record.quantity,jdbcType=INTEGER},
      product_name = #{record.productName,jdbcType=VARCHAR},
      use_coupon_value = #{record.useCouponValue,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.work.shop.oms.bean.bgapidb.YikeOrder">
    update yike_order
    <set>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="barCode != null">
        bar_code = #{barCode,jdbcType=VARCHAR},
      </if>
      <if test="itemNo != null">
        item_no = #{itemNo,jdbcType=VARCHAR},
      </if>
      <if test="priceSell != null">
        price_sell = #{priceSell,jdbcType=DECIMAL},
      </if>
      <if test="priceOriginal != null">
        price_original = #{priceOriginal,jdbcType=DECIMAL},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="discountMoney != null">
        discount_money = #{discountMoney,jdbcType=DECIMAL},
      </if>
      <if test="discountAmount != null">
        discount_amount = #{discountAmount,jdbcType=DECIMAL},
      </if>
      <if test="frDiscountAmount != null">
        fr_discount_amount = #{frDiscountAmount,jdbcType=DECIMAL},
      </if>
      <if test="couponDiscountAmount != null">
        coupon_discount_amount = #{couponDiscountAmount,jdbcType=DECIMAL},
      </if>
      <if test="rewardFee != null">
        reward_fee = #{rewardFee,jdbcType=DECIMAL},
      </if>
      <if test="useBonus != null">
        use_bonus = #{useBonus,jdbcType=INTEGER},
      </if>
      <if test="isGift != null">
        is_gift = #{isGift,jdbcType=VARCHAR},
      </if>
      <if test="returnQuantity != null">
        return_quantity = #{returnQuantity,jdbcType=VARCHAR},
      </if>
      <if test="returnPrice != null">
        return_price = #{returnPrice,jdbcType=DECIMAL},
      </if>
      <if test="returnMoney != null">
        return_money = #{returnMoney,jdbcType=DECIMAL},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="productName != null">
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="useCouponValue != null">
        use_coupon_value = #{useCouponValue,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.work.shop.oms.bean.bgapidb.YikeOrder">
    update yike_order
    set code = #{code,jdbcType=VARCHAR},
      bar_code = #{barCode,jdbcType=VARCHAR},
      item_no = #{itemNo,jdbcType=VARCHAR},
      price_sell = #{priceSell,jdbcType=DECIMAL},
      price_original = #{priceOriginal,jdbcType=DECIMAL},
      amount = #{amount,jdbcType=DECIMAL},
      discount_money = #{discountMoney,jdbcType=DECIMAL},
      discount_amount = #{discountAmount,jdbcType=DECIMAL},
      fr_discount_amount = #{frDiscountAmount,jdbcType=DECIMAL},
      coupon_discount_amount = #{couponDiscountAmount,jdbcType=DECIMAL},
      reward_fee = #{rewardFee,jdbcType=DECIMAL},
      use_bonus = #{useBonus,jdbcType=INTEGER},
      is_gift = #{isGift,jdbcType=VARCHAR},
      return_quantity = #{returnQuantity,jdbcType=VARCHAR},
      return_price = #{returnPrice,jdbcType=DECIMAL},
      return_money = #{returnMoney,jdbcType=DECIMAL},
      quantity = #{quantity,jdbcType=INTEGER},
      product_name = #{productName,jdbcType=VARCHAR},
      use_coupon_value = #{useCouponValue,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>