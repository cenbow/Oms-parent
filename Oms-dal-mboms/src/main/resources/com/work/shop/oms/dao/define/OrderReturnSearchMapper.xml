<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.work.shop.oms.dao.define.OrderReturnSearchMapper">


<sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>


	<!-- 第三方退单查询接口 -->
  	<select id="getReturnInfoPageList" parameterType="com.work.shop.oms.api.param.bean.ReturnSearchParams" resultType="com.work.shop.oms.api.bean.ReturnInfoPage">
  		select 
			orn.return_sn returnSn, orn.master_order_sn masterOrderSn, orn.order_sn relatingOrderSn,
			orn.return_total_fee returnTotalFee, orn.return_reason returnReason, orn.return_order_status returnOrderStatus,
			orn.add_time addTime, orn.clear_time clearTime, oi.user_name userName, ors.return_invoice_no returnInvoiceNo,
			ss.shipping_name shippingName, org.seller seller, orn.pay_status payStatus, orn.ship_status shipStatus,
			orn.sellted_bill_status selltedBillStatus
		from  order_return orn
        left join master_order_info oi on orn.relating_order_sn = oi.master_order_sn
		left join order_return_ship ors on orn.return_sn = ors.relating_return_sn
		left join system_shipping ss on ors.return_express = ss.shipping_code
		left join order_return_goods org on orn.return_sn = org.relating_return_sn
		where 1=1 and orn.return_type in (1,2)
			<if test="returnSn != null">
				and orn.return_sn = #{returnSn}
			</if>
			<if test="returnSnList != null">
				and orn.return_sn in
				<foreach collection="returnSnList" item="item" open="(" close=")" separator=",">
					#{item}
				</foreach>
			</if>
			<if test="payStatus != null">
				and orn.pay_status = #{payStatus}
			</if>
			<if test="shipStatus != null">
				and orn.ship_status = #{shipStatus}
			</if>
			<if test="selltedBillStatus != null">
				and orn.sellted_bill_status = #{selltedBillStatus}
			</if>
			<if test="userName != null">
				and oi.user_name like  CONCAT('%','${userName}','%' )
			</if>
			<if test="addTimeStart != null">
				and orn.add_time  &gt;= #{addTimeStart}
			</if>
			<if test="addTimeEnd != null">
				and orn.add_time &lt; #{addTimeEnd}
			</if>
			<if test="updateTimeBegin != null">
				and orn.update_time  &gt;= #{updateTimeBegin}
			</if>
			<if test="updateTimeEnd != null">
				and orn.update_time &lt; #{updateTimeEnd}
			</if>
			<if test="clearTimeStart != null">
				and orn.clear_time &gt;= #{clearTimeStart}
			</if>
			<if test="clearTimeEnd != null">
				and orn.clear_time &lt; #{clearTimeEnd}
			</if>
			<if test="relatingOrderSn != null">
				and orn.relating_order_sn = #{relatingOrderSn}
			</if>
			<if test="masterOrderSn != null">
				and orn.master_order_sn = #{masterOrderSn}
			</if>
			<if test="returnOrderStatus != null">
				and orn.return_order_status = #{returnOrderStatus}
			</if>
			<if test="customCode != null">
				and org.custom_code = #{customCode}
			</if>
			<if test="goodsSn != null">
				and org.goods_sn = #{goodsSn}
			</if>
			<if test="seller != null">
				and org.seller = #{seller}
			</if>
			<if test="returnInvoiceNo != null">
				and ors.return_invoice_no = #{returnInvoiceNo}
			</if>
			<if test="goodsName != null">
				and org.goods_name like  CONCAT('%','${goodsName}','%' )
			</if>
            <if test="channelCode != null">
                and orn.channel_code = #{channelCode}
            </if>
		group by orn.return_sn
		<if test="orderBy != null" >
	      ${orderBy}
	    </if>
		limit #{start},#{pageSize}
  	</select>
  	
  	<select id="getReturnInfoPageCount" parameterType="com.work.shop.oms.api.param.bean.ReturnSearchParams" resultType="java.lang.Integer">
  		select count(temp.return_sn) from
  		(select 
			orn.return_sn
		from  order_return orn  left join master_order_info oi on orn.master_order_sn = oi.master_order_sn
		left join order_return_ship ors on orn.return_sn = ors.relating_return_sn
		left join system_shipping ss on ors.return_express = ss.shipping_code
		left join order_return_goods org on orn.return_sn = org.relating_return_sn
		where 1=1 and orn.return_type in (1,2)
			<if test="returnSn != null">
				and orn.return_sn = #{returnSn}
			</if>
			<if test="returnSnList != null">
				and orn.return_sn in
				<foreach collection="returnSnList" item="item" open="(" close=")" separator=",">
					#{item}
				</foreach>
			</if>
			<if test="payStatus != null">
				and orn.pay_status = #{payStatus}
			</if>
			<if test="shipStatus != null">
				and orn.ship_status = #{shipStatus}
			</if>
			<if test="selltedBillStatus != null">
				and orn.sellted_bill_status = #{selltedBillStatus}
			</if>
			<if test="userName != null">
				and oi.user_name like  CONCAT('%','${userName}','%' )
			</if>
			<if test="addTimeStart != null">
				and orn.add_time  &gt;= #{addTimeStart}
			</if>
			<if test="addTimeEnd != null">
				and orn.add_time &lt; #{addTimeEnd}
			</if>
			<if test="updateTimeBegin != null">
				and orn.update_time  &gt;= #{updateTimeBegin}
			</if>
			<if test="updateTimeEnd != null">
				and orn.update_time &lt; #{updateTimeEnd}
			</if>
			<if test="clearTimeStart != null">
				and orn.clear_time &gt;= #{clearTimeStart}
			</if>
			<if test="clearTimeEnd != null">
				and orn.clear_time &lt; #{clearTimeEnd}
			</if>
			<if test="relatingOrderSn != null">
				and orn.relating_order_sn = #{relatingOrderSn}
			</if>
			<if test="masterOrderSn != null">
				and orn.master_order_sn = #{masterOrderSn}
			</if>
			<if test="returnOrderStatus != null">
				and orn.return_order_status = #{returnOrderStatus}
			</if>
			<if test="returnInvoiceNo != null">
				and ors.return_invoice_no = #{returnInvoiceNo}
			</if>
			<if test="customCode != null">
				and org.custom_code = #{customCode}
			</if>
			<if test="goodsSn != null">
				and org.goods_sn = #{goodsSn}
			</if>
			<if test="seller != null">
				and org.seller = #{seller}
			</if>
			<if test="goodsName != null">
				and org.goods_name like  CONCAT('%','${goodsName}','%' )
			</if>
            <if test="channelCode != null">
                and orn.channel_code = #{channelCode}
            </if>
		group by orn.return_sn
		<if test="orderBy != null" >
	      ${orderBy}
	    </if>
	    )temp
  	</select>
  	
  	<!--根据供销商编码、时间段查询该供销商所有的退单-->
  	<select id="getOrderReturnForSeller" parameterType="map" resultType="com.work.shop.oms.api.bean.OrderReturnForSellers">
  		select orn.return_sn returnSn, orn.return_order_status returnOrderStatus
  	    from order_return orn left join order_return_goods org on orn.return_sn =org.relating_return_sn  
		where 1=1 and orn.return_type in (1,2)
		<if test="returnOrderStatus != null">
			and orn.return_order_status = #{returnOrderStatus}
		</if>
		<if test="seller != null">
			and org.seller = #{seller}
		</if>
		<if test="dateFrom != null">
			and orn.add_time  &gt;= #{dateFrom}
		</if>
		<if test="dateTo != null">
			and orn.add_time &lt; #{dateTo}
		</if>
		<if test="updateTimeBegin != null">
			and orn.update_time  &gt;= #{updateTimeBegin}
		</if>
		<if test="updateTimeEnd != null">
			and orn.update_time &lt; #{updateTimeEnd}
		</if>
		group by orn.return_sn
  	</select>
  	
  	
	<!-- 退单列表默认模版 -->
	<select id="selectOrderReturnListByExample" parameterType="com.work.shop.oms.bean.OrderReturnExample" resultMap="pageListResultMap">
 		SELECT
			orn.*
			<!-- op.pay_note, -->
			<!-- 	orn.goods_amount - orn.discount - orn.bonus as settlement_price, -->
			<!-- op.pay_name --><!-- , -->
			<!--spt.pay_name as return_pay_name -->
		FROM (
			SELECT
				<include refid="Search_Base_Column_List" />,
	   			<!-- GROUP_CONCAT(og.sku_sn) sku_sns, -->
		    	GROUP_CONCAT(op.pay_note),
	    		GROUP_CONCAT(op.pay_name) as pay_name,
				GROUP_CONCAT(og.goods_sn) goods_sns,
				GROUP_CONCAT(og.goods_name) goods_names,
				GROUP_CONCAT(og.custom_code) custum_codes,
   	        	SUM(og.settlement_price * og.goods_return_number) as financial_Prices, 
				oi.trans_type,
				oi.order_out_sn,
				oi.referer,
				oai.consignee,
				oi.order_status as orderOrderStatus,
				oi.pay_status as orderPayStatus,
				oi.ship_status as orderShipStatus,
				oi.user_name as user_name,
				oi.discount,
				ord.return_pay,
				ord.backBalance,
				<!-- orn.return_fee as return_total_fee, --> 
				orn.return_total_fee,<!--退款金额 -->
				og.prodScanNum,
				<!--ord.return_total_fee, -->
				ors.checkin_time,
		    	orn.return_allgoods_count as return_goods_count,
 				<!--ors.return_shipping_status, -->
				ors.return_invoice_no,
				<!--ord.return_goods_money, -->
		     	orn.return_goods_money, 
				<!--ord.return_Shipping, -->
				orn.return_Shipping,
				orn.integral_money,
				ci.channel_name,
				ors.is_good_received,
				ors.checkin_status,
				ors.quality_status,
				orn.have_refund,
				<!--ord.return_bonus_money, -->
				orn.return_bonus_money,
				<!--ci.channel_name, -->
		    	oie.shop_name,  <!-- 门店名称 -->
				oi.total_fee as total_fee,
				oi.goods_amount as goods_amount,
				oi.bonus as bonus, 
				<!-- 		oq.question_reason as return_reason_name, -->
				<!--ord.return_other_money as return_other_money --><!-- , -->
				<!--ocd.`name` as return_reason_name, -->
				og.market_price,
				og.goods_price,
				og.goods_buy_number,
		 		og.goods_return_number, 
				ewl.warehouse_name ,
		    	ors.depot_code as warehouse_code,  <!-- 退货仓库 -->
				orn.return_other_money as return_other_money,
				oie.shop_code storeCode,
				oie.shop_name storeName
			FROM
				order_return orn
				LEFT JOIN order_return_ship ors ON orn.return_sn = ors.relating_return_sn
				LEFT JOIN
				<if test="listDataType">
					master_order_address_info
				</if>
		    	<if test="!listDataType">
					master_order_address_info_history
				</if> 
				<!--  order_address_info  -->
			 	oai ON orn.master_order_sn = oai.master_order_sn
				LEFT JOIN order_refund ord ON ord.relating_return_sn = orn.return_sn
				<!-- 	LEFT JOIN order_custom_define ocd ON orn.return_reason = ocd.`code` -->
	       	 	LEFT JOIN erp_warehouse_list ewl ON ewl.warehouse_code = ors.depot_code
	        	LEFT JOIN 
				<if test="listDataType">
					order_distribute
				</if>
		    	<if test="!listDataType">
					order_distribute_history
				</if> 
	         	od ON  od.master_order_sn  = orn.master_order_sn
				LEFT JOIN order_return_goods og ON ors.relating_return_sn = og.relating_return_sn	
				LEFT JOIN channel_info AS ci ON orn.channel_code = ci.channel_code 
				<!-- 	LEFT JOIN product_barcode_list pbl ON og.sku_sn = pbl.sku_sn  -->
				<if test="listDataType">
					inner join master_order_info oi on orn.master_order_sn = oi.master_order_sn
				</if>
				<if test="!listDataType">
					inner join master_order_info_history oi  on orn.master_order_sn = oi.master_order_sn
				</if>
				LEFT JOIN master_order_question oq ON oq.master_order_sn = oi.master_order_sn
				LEFT join master_order_info_extend oie on oie.master_order_sn = oi.master_order_sn  
				LEFT JOIN
				<if test="listDataType">
					order_pay
				</if>
		    	<if test="!listDataType">
					order_pay_history
				</if>  
				op ON orn.relating_order_sn = op.order_sn
	
				<if test="_parameter != null">
					<include refid="Example_Where_Clause" /> 
				</if>
				GROUP BY orn.return_sn
			) orn
        	ORDER BY ${orderByClause}
			<if test="criteria.valid">
				<foreach collection="criteria.criteria" item="criterion">
					<if test="criterion.limitValue">
						limit ${criterion.value},${criterion.secondValue}
					</if>
				</foreach>
			</if>
   </select>
   
	<!-- 退单列表默认模版 -->
	<select id="countOrderReturnListByExample" parameterType="com.work.shop.oms.bean.OrderReturnExample" resultType="java.lang.Integer" >
 	select count(*) 
    	from
  		(
	  	SELECT orn.*
			FROM (
				SELECT
				<include refid="Search_Base_Column_List" />,
		    	GROUP_CONCAT(op.pay_note),
	          	GROUP_CONCAT(op.pay_name) as pay_name,
				GROUP_CONCAT(og.goods_sn) goods_sns,
				GROUP_CONCAT(og.goods_name) goods_names,
				GROUP_CONCAT(og.custom_code) custum_codes,
   	        	SUM(og.settlement_price * og.goods_return_number) as financial_Prices, 
				oi.trans_type,
				oi.order_out_sn,
				oi.referer,
				oai.consignee,
				oi.order_status as orderOrderStatus,
				oi.pay_status as orderPayStatus,
				oi.ship_status as orderShipStatus,
				oi.user_name as user_name,
				oi.discount,
				ord.return_pay,
				orn.return_total_fee,<!--退款金额 -->
				og.prodScanNum,
				ors.checkin_time,
		    	orn.return_allgoods_count as return_goods_count,
				ors.return_invoice_no,
		     	orn.return_goods_money, 
				orn.return_Shipping,
				orn.integral_money,
				ci.channel_name,
				ors.is_good_received,
				ors.checkin_status,
				ors.quality_status,
				orn.have_refund,
				orn.return_bonus_money,
		    	oie.shop_name,  <!-- 门店名称 -->
				oi.total_fee as total_fee,
				oi.goods_amount as goods_amount,
				oi.bonus as bonus, 
				ewl.warehouse_name ,
		    	ors.depot_code as warehouse_code,  <!-- 退货仓库 -->              
				orn.return_other_money as return_other_money
			FROM
				order_return orn
				LEFT JOIN order_return_ship ors ON orn.return_sn = ors.relating_return_sn
				LEFT JOIN
				<if test="listDataType">
					master_order_address_info
				</if>
		    	<if test="!listDataType">
					master_order_address_info_history
				</if> 
				<!--  order_address_info  -->
			 	oai ON orn.master_order_sn = oai.master_order_sn
				LEFT JOIN order_refund ord ON ord.relating_return_sn = orn.return_sn
	        	LEFT JOIN erp_warehouse_list ewl ON ewl.warehouse_code = ors.depot_code
	        	LEFT JOIN 
		        <if test="listDataType">
					order_distribute
				</if>
			    <if test="!listDataType">
					order_distribute_history
				</if> 
	         	od ON od.master_order_sn = orn.master_order_sn
				LEFT JOIN order_return_goods og ON ors.relating_return_sn = og.relating_return_sn	
				LEFT JOIN channel_info AS ci ON orn.channel_code = ci.channel_code 
				<if test="listDataType">
					inner join master_order_info oi on orn.master_order_sn = oi.master_order_sn
				</if>
				<if test="!listDataType">
					inner join master_order_info_history oi  on orn.master_order_sn = oi.master_order_sn
				</if>
				LEFT JOIN master_order_question oq ON oq.master_order_sn = oi.master_order_sn
				LEFT join master_order_info_extend oie on oie.master_order_sn = oi.master_order_sn  
				LEFT JOIN
				<if test="listDataType">
					order_pay
				</if>
		    	<if test="!listDataType">
					order_pay_history
				</if>  
				op ON orn.relating_order_sn = op.order_sn
				<if test="_parameter != null">
					<include refid="Example_Where_Clause" /> 
				</if>
				GROUP BY orn.return_sn
			) orn
			ORDER BY
			${orderByClause}
		)aaa
	</select>
   
	<!-- 退单商品列表默认模版 -->
	<select id="selectOrderReturnGoodsListByExample" parameterType="com.work.shop.oms.bean.OrderReturnExample" resultMap="returnGoodsMap">
 		SELECT orn.*, sum(mog.goods_number) as goods_buy_number FROM (
			SELECT
				orn.return_sn,
				orn.relating_order_sn,
				orn.return_type,
				orn.add_time,
				orn.refund_type,
				oi.order_from,
				oi.channel_code,
				og.custom_code,
				og.goods_sn,
				og.goods_name,
				og.market_price,
				og.goods_price,
		 		sum(og.goods_return_number) as goods_return_number, 
		 		og.box_gauge,
		 		og.checkin_status
			FROM
				order_return orn
				LEFT JOIN order_return_ship ors ON orn.return_sn = ors.relating_return_sn
				LEFT JOIN
				<if test="listDataType">
					master_order_address_info
				</if>
		    	<if test="!listDataType">
					master_order_address_info_history
				</if> 
			 	oai ON orn.master_order_sn = oai.master_order_sn
				LEFT JOIN order_refund ord ON ord.relating_return_sn = orn.return_sn
	       	 	LEFT JOIN erp_warehouse_list ewl ON ewl.warehouse_code = ors.depot_code
	        	LEFT JOIN 
				<if test="listDataType">
					order_distribute
				</if>
		    	<if test="!listDataType">
					order_distribute_history
				</if> 
	         	od ON  od.master_order_sn  = orn.master_order_sn
				LEFT JOIN order_return_goods og ON ors.relating_return_sn = og.relating_return_sn
				LEFT JOIN channel_info AS ci ON orn.channel_code = ci.channel_code 
				<!-- 	LEFT JOIN product_barcode_list pbl ON og.sku_sn = pbl.sku_sn  -->
				<if test="listDataType">
					inner join master_order_info oi on orn.master_order_sn = oi.master_order_sn
				</if>
				<if test="!listDataType">
					inner join master_order_info_history oi  on orn.master_order_sn = oi.master_order_sn
				</if>
				LEFT JOIN master_order_question oq ON oq.master_order_sn = oi.master_order_sn
				LEFT join master_order_info_extend oie on oie.master_order_sn = oi.master_order_sn  
				LEFT JOIN
				<if test="listDataType">
					order_pay
				</if>
		    	<if test="!listDataType">
					order_pay_history
				</if>  
				op ON orn.relating_order_sn = op.order_sn
	
				<if test="_parameter != null">
					<include refid="Example_Where_Clause" /> 
				</if>
			GROUP BY orn.return_sn, og.custom_code
		) orn
		LEFT JOIN master_order_goods mog ON mog.master_order_sn = orn.relating_order_sn and orn.custom_code = mog.custom_code	
		GROUP BY orn.return_sn, orn.custom_code
   		ORDER BY ${orderByClause}
		<if test="criteria.valid">
			<foreach collection="criteria.criteria" item="criterion">
				<if test="criterion.limitValue">
					limit ${criterion.value},${criterion.secondValue}
				</if>
			</foreach>
		</if>
   </select>
   
   <!-- 获取退单商品总数 -->
   <select id="countOrderReturnGoodsListByExample" parameterType="com.work.shop.oms.bean.OrderReturnExample" resultType="java.lang.Integer">
		select count(*) from (
	  		SELECT orn.* FROM
			order_return orn
			LEFT JOIN order_return_ship ors ON orn.return_sn = ors.relating_return_sn
			LEFT JOIN
			<if test="listDataType">
				master_order_address_info
			</if>
	    	<if test="!listDataType">
				master_order_address_info_history
			</if> 
			<!--  order_address_info  -->
		 	oai ON orn.master_order_sn = oai.master_order_sn
			LEFT JOIN order_refund ord ON ord.relating_return_sn = orn.return_sn
        	LEFT JOIN erp_warehouse_list ewl ON ewl.warehouse_code = ors.depot_code
        	LEFT JOIN 
	        <if test="listDataType">
				order_distribute
			</if>
		    <if test="!listDataType">
				order_distribute_history
			</if> 
         	od ON od.master_order_sn = orn.master_order_sn
			LEFT JOIN order_return_goods og ON ors.relating_return_sn = og.relating_return_sn	
			LEFT JOIN channel_info AS ci ON orn.channel_code = ci.channel_code 
			<if test="listDataType">
				inner join master_order_info oi on orn.master_order_sn = oi.master_order_sn
			</if>
			<if test="!listDataType">
				inner join master_order_info_history oi  on orn.master_order_sn = oi.master_order_sn
			</if>
			LEFT JOIN master_order_question oq ON oq.master_order_sn = oi.master_order_sn
			LEFT join master_order_info_extend oie on oie.master_order_sn = oi.master_order_sn  
			LEFT JOIN
			<if test="listDataType">
				order_pay
			</if>
	    	<if test="!listDataType">
				order_pay_history
			</if>  
			op ON orn.relating_order_sn = op.order_sn
			<if test="_parameter != null">
				<include refid="Example_Where_Clause" /> 
			</if>
			GROUP BY orn.return_sn, og.custom_code
		)aaa
   </select>
   
   <!-- 退单列表财务模版 -->
   <select id="selectOrderReturnListByFinancialExample" parameterType="com.work.shop.oms.bean.OrderReturnExample" resultMap="pageListResultMap">
     SELECT
		orn.*,
	GROUP_CONCAT(og.goods_sn) goods_sns,
			GROUP_CONCAT(og.goods_name) goods_names,
			GROUP_CONCAT(og.custom_code) custum_codes,
			og.prodScanNum,
			SUM(
				og.settlement_price * og.goods_return_number
			) AS financial_Prices
	FROM (
		SELECT
		
			<include refid="Search_Base_Column_List" />,
	  
		    GROUP_CONCAT(op.pay_note) as pay_note,
	          GROUP_CONCAT(op.pay_name) as pay_name,
	           GROUP_CONCAT(ord.return_pay) as return_pays, 
	         
          
		<!-- 	GROUP_CONCAT(og.goods_sn) goods_sns,
			GROUP_CONCAT(og.goods_name) goods_names,
			GROUP_CONCAT(og.custom_code) custum_codes,
   	        SUM(og.settlement_price * og.goods_return_number) as financial_Prices,  -->
   	   
			oi.trans_type,
			ors.relating_return_sn,
			oi.order_out_sn,
			oi.referer,
			oi.order_status as orderOrderStatus,
			oi.pay_status as orderPayStatus,
			oi.ship_status as orderShipStatus,
			oi.user_name as user_name,
			oi.discount,
			<!-- ord.return_pay, -->
		
			orn.return_total_fee,<!--退款金额 -->
	
			ors.checkin_time,
			ors.return_express,<!-- 退货快递公司编码 -->
		    orn.return_allgoods_count as return_goods_count,
 
			ors.return_invoice_no,
	
		     orn.return_goods_money, 
	   	 orn.integral_money, 
			orn.return_Shipping,
			orn.have_refund,
			ors.is_good_received,
			ors.checkin_status,
			ors.quality_status,
			ci.channel_name,
		
			orn.return_bonus_money,
		
		    oie.shop_name,  <!-- 门店名称 -->
			oi.total_fee as total_fee,
			oi.goods_amount as goods_amount,
			oi.bonus as bonus, 
		<!-- 	oq.question_reason as return_reason_name, -->
	
			ewl.warehouse_name ,
		    ors.depot_code as warehouse_code,  <!-- 退货仓库 -->              
			orn.return_other_money as return_other_money
		FROM
			order_return orn
			LEFT JOIN order_return_ship ors ON orn.return_sn = ors.relating_return_sn
			
			LEFT JOIN
			
			<if test="listDataType">
				order_address_info
			</if>
		    <if test="!listDataType">
				order_address_info_history
			</if> 
			
			<!--  order_address_info  -->
			 oai ON orn.relating_order_sn = oai.order_sn

			LEFT JOIN order_refund ord ON ord.relating_return_sn = orn.return_sn

	        LEFT JOIN erp_warehouse_list ewl ON ewl.warehouse_code = ors.depot_code
		<!-- 	LEFT JOIN order_return_goods og ON ors.relating_return_sn = og.relating_return_sn	 -->
			LEFT JOIN channel_info AS ci ON orn.channel_code = ci.channel_code 
			<if test="listDataType">
				inner join master_order_info oi on orn.master_order_sn = oi.master_order_sn
			</if>
			<if test="!listDataType">
				inner join master_order_info_history oi  on orn.master_order_sn = oi.master_order_sn
			</if>
			LEFT JOIN master_order_question oq ON oq.master_order_sn = oi.master_order_sn
			LEFT join master_order_info_extend oie on oie.master_order_sn = oi.master_order_sn  
			
		
			LEFT JOIN
			<if test="listDataType">
				master_order_pay
			</if>
		    <if test="!listDataType">
				master_order_pay_history
			</if>  
			op ON orn.master_order_sn = op.master_order_sn
	
			<if test="_parameter != null">
				<include refid="Example_Where_Clause" /> 
			</if>
			GROUP BY
				orn.return_sn
		
		
		) orn
		
	LEFT JOIN order_return_goods og ON  og.relating_return_sn = orn.relating_return_sn
GROUP BY
					orn.return_sn
        	ORDER BY
				${orderByClause}
				
				
					<if test="criteria.valid">
				<foreach collection="criteria.criteria" item="criterion">
					<if test="criterion.limitValue">
						limit ${criterion.value},${criterion.secondValue}
					</if>
				</foreach>
			</if>
   </select>
   
   <!--  退单列表  财务模版数量 -->
    <select id="countOrderReturnListByFinancialExample" parameterType="com.work.shop.oms.bean.OrderReturnExample" resultType="java.lang.Integer" >
 SELECT COUNT(*) from (
 
  SELECT
  orn.*,
  	GROUP_CONCAT(og.goods_sn) goods_sns,
			GROUP_CONCAT(og.goods_name) goods_names,
			GROUP_CONCAT(og.custom_code) custum_codes,
   	        SUM(og.settlement_price * og.goods_return_number) as financial_Prices
		
	FROM (
		SELECT
		
			<include refid="Search_Base_Column_List" />,
	 
	        GROUP_CONCAT(op.pay_note) as pay_note,
	        GROUP_CONCAT(op.pay_name),
	         GROUP_CONCAT(ord.return_pay) as return_pays, 
	        ors.relating_return_sn,
		<!-- 	GROUP_CONCAT(og.goods_sn) goods_sns,
			GROUP_CONCAT(og.goods_name) goods_names,
			GROUP_CONCAT(og.custom_code) custum_codes,
   	        SUM(og.settlement_price * og.goods_return_number) as financial_Prices,  -->
   	
			oi.trans_type,
			oi.order_out_sn,
			oi.referer,
			oi.order_status as orderOrderStatus,
			oi.pay_status as orderPayStatus,
			oi.ship_status as orderShipStatus,
			oi.user_name as user_name,
			oi.discount,
		<!-- 	ord.return_pay, -->
		
			orn.return_total_fee,<!--退款金额 -->
			
	
			ors.checkin_time,
		    orn.return_allgoods_count as return_goods_count,
 	
			ors.return_invoice_no,
		
		     orn.return_goods_money, 
		
			orn.return_Shipping,
	
			ors.is_good_received,
			ors.checkin_status,
			ors.quality_status,
				ci.channel_name,
		
			orn.return_bonus_money,
		
		    oie.shop_name,  <!-- 门店名称 -->
			oi.total_fee as total_fee,
			oi.goods_amount as goods_amount,
			oi.bonus as bonus, 
		<!-- 	oq.question_reason as return_reason_name,
	 -->
			ewl.warehouse_name ,
		    ors.depot_code as warehouse_code,  <!-- 退货仓库 -->              
			orn.return_other_money as return_other_money
		FROM
			order_return orn
			LEFT JOIN order_return_ship ors ON orn.return_sn = ors.relating_return_sn
			
			LEFT JOIN 
			
			<!-- order_address_info  -->
			<if test="listDataType">
				order_address_info
			</if>
		    <if test="!listDataType">
				order_address_info_history
			</if> 
			
			oai ON orn.relating_order_sn = oai.order_sn

			LEFT JOIN order_refund ord ON ord.relating_return_sn = orn.return_sn
	
	        LEFT JOIN erp_warehouse_list ewl ON ewl.warehouse_code = ors.depot_code
	        LEFT JOIN channel_info AS ci ON orn.channel_code = ci.channel_code 
			<!-- LEFT JOIN order_return_goods og ON ors.relating_return_sn = og.relating_return_sn	 -->
			
	
			<if test="listDataType">
				LEFT join master_order_info oi on orn.master_order_sn = oi.master_order_sn
			</if>
			<if test="!listDataType">
				LEFT join master_order_info_history oi  on orn.master_order_sn = oi.master_order_sn
			</if>
			LEFT JOIN master_order_question oq ON oq.master_order_sn = oi.master_order_sn
			LEFT join master_order_info_extend oie on oie.master_order_sn = oi.master_order_sn  
			
			LEFT JOIN
			<if test="listDataType">
				master_order_pay
			</if>
		    <if test="!listDataType">
				master_order_pay_history
			</if>  
			op ON orn.master_order_sn = op.master_order_sn
		
			<if test="_parameter != null">
				<include refid="Example_Where_Clause" /> 
			</if>
			GROUP BY
				orn.return_sn
		
		
		) orn
	
LEFT JOIN order_return_goods og ON  og.relating_return_sn = orn.relating_return_sn
GROUP BY
					orn.return_sn
        	ORDER BY
				${orderByClause}
				
	)	ooo
		
				
				
   </select>
  
  <!-- 退单列表物流模版 -->
   <select id="selectOrderReturnListByLogisticsExample" parameterType="com.work.shop.oms.bean.OrderReturnExample" resultMap="pageListResultMap">
     SELECT
    <!--  distinct -->
     
		orn.*
	
	FROM (
		SELECT
			<include refid="Search_Base_Column_List" />,
	  
		 <!--    GROUP_CONCAT(op.pay_note),
	        GROUP_CONCAT(op.pay_name) as pay_name,
          
			GROUP_CONCAT(og.goods_sn) goods_sns,
			GROUP_CONCAT(og.goods_name) goods_names,
			GROUP_CONCAT(og.custom_code) custum_codes, -->
			
			op.pay_note,
			op.pay_name,
			og.goods_sn,
			
			<!-- og.sku_sn, -->
			
            og.checkin_time as  org_checkin_time,
			og.goods_name,
			og.custom_code,
			og.prodScanNum,
	  
			oi.trans_type,
			oi.order_out_sn,
			oi.referer,
			oi.order_status as orderOrderStatus,
			oi.pay_status as orderPayStatus,
			oi.ship_status as orderShipStatus,
			oi.user_name as user_name,
			oi.discount,
		<!-- 	ord.return_pay,
	  -->
			orn.return_total_fee,<!--退款金额 -->
		
			ors.checkin_time,
		    orn.return_allgoods_count as return_goods_count,
 		
			ors.return_invoice_no,
	
		     orn.return_goods_money, 

			orn.return_Shipping,
			ci.channel_name,
			ors.is_good_received,
			ors.checkin_status,
			ors.quality_status,
		
			og.market_price,
			og.goods_price,
			og.goods_buy_number,
		 	og.goods_return_number, 
			
			orn.return_bonus_money,
	
		    oie.shop_name,  <!-- 门店名称 -->
			oi.total_fee as total_fee,
			oi.goods_amount as goods_amount,
			oi.bonus as bonus, 
		<!-- 	oq.question_reason as return_reason_name, -->
	
			ewl.warehouse_name ,
		    ors.depot_code as warehouse_code,  <!-- 退货仓库 -->              
			orn.return_other_money as return_other_money
		FROM
			order_return orn
			LEFT JOIN order_return_ship ors ON orn.return_sn = ors.relating_return_sn
			
			LEFT JOIN 
			
			<!-- order_address_info  -->
			
			<if test="listDataType">
				order_address_info
			</if>
		    <if test="!listDataType">
				order_address_info_history
			</if> 
			oai ON orn.relating_order_sn = oai.order_sn

		<!-- 	LEFT JOIN order_refund ord ON ord.relating_return_sn = orn.return_sn -->
	
	        LEFT JOIN erp_warehouse_list ewl ON ewl.warehouse_code = ors.depot_code
			LEFT JOIN order_return_goods og ON ors.relating_return_sn = og.relating_return_sn	
			
			LEFT JOIN channel_info AS ci ON orn.channel_code = ci.channel_code 
	
			<if test="listDataType">
				inner join master_order_info oi on orn.master_order_sn = oi.master_order_sn
			</if>
			<if test="!listDataType">
				inner join master_order_info_history oi  on orn.master_order_sn = oi.master_order_sn
			</if>
			LEFT JOIN master_order_question oq ON oq.master_order_sn = oi.master_order_sn
			LEFT join master_order_info_extend oie on oie.master_order_sn = oi.master_order_sn  
			
		
			LEFT JOIN
			<if test="listDataType">
				order_pay
			</if>
		    <if test="!listDataType">
				order_pay_history
			</if>  
			op ON orn.relating_order_sn = op.order_sn
	
			<if test="_parameter != null">
				<include refid="Example_Where_Clause" /> 
			</if>
			<!-- GROUP BY
				orn.return_sn -->
		
		
		) orn
	

        	ORDER BY
				${orderByClause}
				
				
					<if test="criteria.valid">
				<foreach collection="criteria.criteria" item="criterion">
					<if test="criterion.limitValue">
						limit ${criterion.value},${criterion.secondValue}
					</if>
				</foreach>
			</if>
   </select>
   
   <!-- 退单列表数量物流模版 -->
   <select id="countOrderReturnListByLogisticsExample" parameterType="com.work.shop.oms.bean.OrderReturnExample" resultType="java.lang.Integer" >
 SELECT COUNT(*) from (
 
  SELECT
 <!--  distinct -->
  orn.*
		
	FROM (
		SELECT
			<include refid="Search_Base_Column_List" />,
	 
	<!-- 	      GROUP_CONCAT(op.pay_note),
	          GROUP_CONCAT(op.pay_name),
			GROUP_CONCAT(og.goods_sn) goods_sns,
			GROUP_CONCAT(og.goods_name) goods_names,
			GROUP_CONCAT(og.custom_code) custum_codes, -->
   	   <!--      SUM(og.settlement_price * og.goods_return_number) as financial_Prices, 
   	         -->
   	        
			oi.trans_type,
			oi.order_out_sn,
			oi.referer,
			oi.order_status as orderOrderStatus,
			oi.pay_status as orderPayStatus,
			oi.ship_status as orderShipStatus,
			oi.user_name as user_name,
			oi.discount,
			<!-- ord.return_pay, -->
		
			orn.return_total_fee,<!--退款金额 -->
			
		
			ors.checkin_time,
		    orn.return_allgoods_count as return_goods_count,
 	
			ors.return_invoice_no,
	
		     orn.return_goods_money, 
	
			orn.return_Shipping,
	
			ors.is_good_received,
			ors.checkin_status,
			ors.quality_status,
		
	
			orn.return_bonus_money,
		
		    oie.shop_name,  <!-- 门店名称 -->
			oi.total_fee as total_fee,
			oi.goods_amount as goods_amount,
			oi.bonus as bonus, 
		<!-- 	oq.question_reason as return_reason_name, -->
	
			ewl.warehouse_name ,
		    ors.depot_code as warehouse_code,  <!-- 退货仓库 -->              
			orn.return_other_money as return_other_money
		FROM
			order_return orn
			LEFT JOIN order_return_ship ors ON orn.return_sn = ors.relating_return_sn
			
			LEFT JOIN 
			
		<!-- 	order_address_info  -->
			
			<if test="listDataType">
				order_address_info
			</if>
		    <if test="!listDataType">
				order_address_info_history
			</if> 
			
			oai ON orn.relating_order_sn = oai.order_sn

		<!-- 	LEFT JOIN order_refund ord ON ord.relating_return_sn = orn.return_sn
 -->
	        LEFT JOIN erp_warehouse_list ewl ON ewl.warehouse_code = ors.depot_code
			LEFT JOIN order_return_goods og ON ors.relating_return_sn = og.relating_return_sn	
				LEFT JOIN channel_info AS ci ON orn.channel_code = ci.channel_code 
	
			<if test="listDataType">
				inner join master_order_info oi on orn.master_order_sn = oi.master_order_sn
			</if>
			<if test="!listDataType">
				inner join master_order_info_history oi  on orn.master_order_sn = oi.master_order_sn
			</if>
			LEFT JOIN master_order_question oq ON oq.master_order_sn = oi.master_order_sn
			LEFT join master_order_info_extend oie on oie.master_order_sn = oi.master_order_sn  
			
			LEFT JOIN
			<if test="listDataType">
				order_pay
			</if>
		    <if test="!listDataType">
				order_pay_history
			</if>  
			op ON orn.relating_order_sn = op.order_sn
		
			<if test="_parameter != null">
				<include refid="Example_Where_Clause" /> 
			</if>
		<!-- 	GROUP BY
				orn.return_sn -->
		
		
		) orn
	

        	ORDER BY
				${orderByClause}
				
	)	ooo
		
				
				
   </select>
   
     <sql id="Search_Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    orn.return_sn,  orn.master_order_sn, orn.relating_order_sn, orn.relating_order_type, orn.return_order_status, orn.return_reason, 
   <!--  orn.return_from, --> orn.return_type,<!--  orn.order_type, --> orn.return_settlement_type, orn.process_type, orn.back_to_cs, 
    <!-- orn.is_update, orn.update_type,  --> action_user,orn.add_time, disposition, orn.confirm_time, orn.clear_time, 
    orn.update_time,<!--  orn.finish_lasttime, --><!--  orn.settlement_lasttime, --> <!-- orn.all_process_lasttime, --><!--  orn.urgent_level, --> 
   <!--  orn.period_series, --> orn.timeout_status, orn.new_order_sn, <!-- orn.has_goods_return, --> orn.return_allgoods_count, 
    orn.user_id, orn.pay_status, orn.ship_status, orn.lock_status, orn.lock_time, <!-- orn.pickup_status,  orn.pickup_besttime, -->
    orn.pricediffer_goods_total
  </sql>
  	
  	<resultMap type="com.work.shop.oms.vo.OrderReturnListVO" id="returnGoodsMap">
  		<result column="return_sn" property="returnSn"/>
  		<result column="relating_order_sn" property="relatingOrderSn"/>
  		<result column="return_type" property="returnType"/>
  		<result column="add_time" property="addTime"/>
  		<result column="channel_code" property="siteCode"/>
  		<result column="order_from" property="channelCode"/>
  		<result column="refund_type" property="refundType"/>
  		<result column="custom_code" property="customCode"/>
  		<result column="goods_sn" property="goodsSn"/>
  		<result column="goods_name" property="goodsName"/>
  		<result column="market_price" property="marketPrice"/>
  		<result column="goods_price" property="goodsPrice"/>
  		<result column="goods_return_number" property="goodsReturnNumber"/>
  		<result column="goods_buy_number" property="goodsBuyNumber"/>
  		<result column="checkin_status" property="checkinStatus"/>
  		<result column="box_gauge" property="boxGauge"/>
  	</resultMap>
  	
	<resultMap extends="BaseResultMap" id="pageListResultMap" type="com.work.shop.oms.vo.OrderReturnListVO">
		<result column="order_out_sn" jdbcType="VARCHAR" property="orderOutSn" />
		<result column="referer" jdbcType="VARCHAR" property="referer" />
		<result column="return_pay" jdbcType="SMALLINT" property="returnPay" />
		<result column="backBalance" jdbcType="SMALLINT" property="backBalance" />
		<result column="user_name" jdbcType="VARCHAR" property="userName" />
		<result column="return_total_fee" jdbcType="DECIMAL" property="returnTotalFee" />
		<result column="return_invoice_no" jdbcType="VARCHAR" property="returnInvoiceNo" />
		<result column="return_pay_status" jdbcType="TINYINT" property="returnPayStatus" />
		<result column="checkin_time" jdbcType="TIMESTAMP" property="checkinTime" />
		<result column="return_goods_count" jdbcType="TINYINT" property="returnGoodsCount" />
		<result column="return_shipping_status" jdbcType="TINYINT" property="returnShippingStatus" />
		<result column="channel_name" jdbcType="VARCHAR" property="channelName" />
		<result column="pay_name" jdbcType="VARCHAR" property="payName" />
		<result column="return_reason_name" jdbcType="VARCHAR" property="returnReasonName" />
		<result column="return_shipping_sn" jdbcType="VARCHAR" property="returnShippingSn" />
		<result column="goods_sn" jdbcType="VARCHAR" property="goodsSn" />
		<result column="sku_sn" jdbcType="VARCHAR" property="skuSn" />
		<result column="goods_name" jdbcType="VARCHAR" property="goodsName" />    
		<result column="goods_return_number" jdbcType="SMALLINT" property="goodsReturnNumber" />
		<result column="goods_buy_number" jdbcType="SMALLINT" property="goodsBuyNumber" />
 		<result column="market_price" jdbcType="DECIMAL" property="marketPrice" />
		<result column="goods_price" jdbcType="DECIMAL" property="goodsPrice" />
		<result column="bonus" jdbcType="DECIMAL" property="bonus" />
		<result column="return_Other_money" jdbcType="DECIMAL" property="returnOtherMoney" />

		<result column="org_checkin_time" jdbcType="TIMESTAMP" property="orgCheckinTime" />

		<result column="master_order_sn" jdbcType="VARCHAR" property="masterOrderSn" />

		<result column="integral_money" jdbcType="DECIMAL" property="integralMoney" />

		<result column="bank" jdbcType="VARCHAR" property="bank" />
	
		<result column="subsidiary_bank" jdbcType="VARCHAR" property="subsidiaryBank" />
	
		<result column="account_number" jdbcType="VARCHAR" property="accountNumber" />
	
		<result column="account" jdbcType="VARCHAR" property="account" />
		<result column="consignee" jdbcType="VARCHAR" property="consignee" />

		<result column="depot_code" jdbcType="VARCHAR" property="depotCode" />
<!--	<result column="depot_name" jdbcType="VARCHAR" property="depotName" /> -->

		<result column="warehouse_name" jdbcType="VARCHAR" property="warehouseName" />
	
<!-- <result column="return_goods_money" jdbcType="DECIMAL" property="returnGoodsMoney" /> -->

		<result column="return_Shipping" jdbcType="DECIMAL" property="returnShipping" />
	
<!--<result column="sku_sns" jdbcType="VARCHAR" property="skuSns" /> -->

		<result column="goods_sns" jdbcType="VARCHAR" property="goodsSns" />
		<result column="goods_names" jdbcType="VARCHAR" property="goodsNames" />
		<result column="custum_codes" jdbcType="VARCHAR" property="custumCodes" />
		<result column="custom_code" jdbcType="VARCHAR" property="customCode"/>

	 	<result column="is_good_received" property="isGoodReceived" jdbcType="TINYINT" />
	 	<result column="checkin_status" property="checkinStatus" jdbcType="TINYINT" />
	 	<result column="quality_status" property="qualityStatus" jdbcType="INTEGER" />

 		<result column="have_refund" property="haveRefund" jdbcType="TINYINT" />

	 	<result column="financial_Prices" jdbcType="DECIMAL" property="financialPrices" />
	
		<result column="pay_note" jdbcType="VARCHAR" property="payNote" />
	
		<result column="return_pays" jdbcType="VARCHAR" property="returnPays" />
		<result column="return_bonus_money" jdbcType="DECIMAL" property="returnBonusMoney" />
		<result column="return_express" jdbcType="VARCHAR" property="returnExpress" />
		<result column="custum_code" jdbcType="VARCHAR" property="custumCode" />
	</resultMap>
  	
  	  <resultMap id="BaseResultMap" type="com.work.shop.oms.bean.OrderReturn">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="return_sn" jdbcType="VARCHAR" property="returnSn" />
    <result column="relating_order_sn" jdbcType="VARCHAR" property="relatingOrderSn" />
    <result column="relating_order_type" jdbcType="INTEGER" property="relatingOrderType" />
    
     <result column="return_goods_money" jdbcType="DECIMAL" property="returnGoodsMoney" />
    <result column="return_order_status" jdbcType="TINYINT" property="returnOrderStatus" />
    <result column="return_reason" jdbcType="VARCHAR" property="returnReason" />
    <result column="return_from" jdbcType="VARCHAR" property="returnFrom" />
    <result column="return_type" jdbcType="TINYINT" property="returnType" />
    <result column="order_type" jdbcType="TINYINT" property="orderType" />
    <result column="return_settlement_type" jdbcType="TINYINT" property="returnSettlementType" />
    <result column="process_type" jdbcType="TINYINT" property="processType" />
    <result column="back_to_cs" jdbcType="INTEGER" property="backToCs" />
    <result column="is_update" jdbcType="TINYINT" property="isUpdate" />
    <result column="update_type" jdbcType="VARCHAR" property="updateType" />
    <result column="action_user" jdbcType="VARCHAR" property="actionUser" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="disposition" jdbcType="INTEGER" property="disposition" />
    <result column="confirm_time" jdbcType="TIMESTAMP" property="confirmTime" />
    <result column="clear_time" jdbcType="TIMESTAMP" property="clearTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="finish_lasttime" jdbcType="TIMESTAMP" property="finishLasttime" />
    <result column="settlement_lasttime" jdbcType="TIMESTAMP" property="settlementLasttime" />
    <result column="all_process_lasttime" jdbcType="TIMESTAMP" property="allProcessLasttime" />
    <result column="urgent_level" jdbcType="TINYINT" property="urgentLevel" />
    <result column="period_series" jdbcType="INTEGER" property="periodSeries" />
    <result column="timeout_status" jdbcType="INTEGER" property="timeoutStatus" />
    <result column="new_order_sn" jdbcType="VARCHAR" property="newOrderSn" />
    <result column="has_goods_return" jdbcType="TINYINT" property="hasGoodsReturn" />
    <result column="return_allgoods_count" jdbcType="INTEGER" property="returnAllgoodsCount" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="pay_status" jdbcType="TINYINT" property="payStatus" />
    <result column="ship_status" jdbcType="TINYINT" property="shipStatus" />
    <result column="lock_status" jdbcType="INTEGER" property="lockStatus" />
    <result column="lock_time" jdbcType="TIMESTAMP" property="lockTime" />
    <result column="pickup_status" jdbcType="TINYINT" property="pickupStatus" />
    <result column="pickup_besttime" jdbcType="VARCHAR" property="pickupBesttime" />
    <result column="pricediffer_goods_total" jdbcType="TINYINT" property="pricedifferGoodsTotal" />
  </resultMap>
  
  	<select id="getOrderReturnInfo" parameterType="com.work.shop.oms.api.param.bean.ReturnSearchParams" resultType="com.work.shop.oms.api.bean.ReturnInfoPage">
  		select 
  			ord.return_sn returnSn,
  			ord.relating_order_sn relatingOrderSn,
  			ord.return_total_fee returnTotalFee,
  			ord.return_reason returnReason,
  			ord.return_order_status returnOrderStatus,
  			ord.add_time addTime,
  			ord.clear_time clearTime
  		from order_return ord
  		where ord.return_type in (1,2)
  		and ord.return_order_status != 4
  		and ord.relating_order_sn = #{relatingOrderSn} 
  	</select>


    <resultMap id="OrderReturnGoodsResultMap" type="com.work.shop.oms.bean.OrderReturnGoods">
    <id column="id" jdbcType="BIGINT" property="id" />
        <result column="relating_return_sn"  property="relatingReturnSn" />
        <result column="custom_code"  property="customCode" />
        <result column="goods_sn"  property="goodsSn" />
        <result column="goods_name" property="goodsName" />
        <result column="goods_return_number"  property="goodsReturnNumber" />
        <result column="goods_buy_number"  property="goodsBuyNumber" />
        <result column="charge_back_count"  property="chargeBackCount" />
        <result column="have_return_count"  property="haveReturnCount" />
        <result column="market_price"  property="marketPrice" />
        <result column="goods_price"  property="goodsPrice" />
        <result column="extension_code"  property="extensionCode" />
        <result column="extension_id"  property="extensionId" />
        <result column="settlement_price"  property="settlementPrice" />
        <result column="share_bonus" property="shareBonus" />
        <result column="share_settle"  property="shareSettle" />
        <result column="os_depot_code"  property="osDepotCode" />
        <result column="price_difference"  property="priceDifference" />
        <result column="price_differ_num"  property="priceDifferNum" />
        <result column="price_differ_reason" property="priceDifferReason" />
        <result column="return_reason"  property="returnReason" />
        <result column="goods_thumb"  property="goodsThumb" />
        <result column="goods_color_name"  property="goodsColorName" />
        <result column="goods_size_name" property="goodsSizeName" />
        <result column="group_name"  property="groupName" />
        <result column="is_real"  property="isReal" />
        <result column="is_gift"  property="isGift" />
        <result column="rank_points"  property="rankPoints" />
        <result column="pay_points"  property="payPoints" />
        <result column="seller"  property="seller" />
        <result column="is_good_received"  property="isGoodReceived" />
        <result column="checkin_status"  property="checkinStatus" />
        <result column="quality_status"  property="qualityStatus" />
        <result column="integral_money"  property="integralMoney" />
        <result column="barcode"  property="barcode" />
        <result column="remark"  property="remark" />
        <result column="prodScanNum"  property="prodscannum" />
        <result column="master_order_sn" property="masterOrderSn" />
        <result column="order_sn"  property="orderSn" />
        <result column="sales_mode"  property="salesMode" />
        <result column="to_erp"  property="toErp" />
        <result column="storage_time_stamp"  property="storageTimeStamp" />
        <result column="storage_status"  property="storageStatus" />
        <result column="storage_treate_time"  property="storageTreateTime" />
        <result column="checkin_time"  property="checkinTime" />
        <result column="sap"  property="sap" />
        <result column="bv_value"  property="bvValue" />
        <result column="discount"  property="discount" />
        <result column="base_bv_value"  property="baseBvValue" />
        <result column="box_gauge"  property="boxGauge" />
        <result column="cost_price"  property="costPrice" />
    </resultMap>
    <sql id="Order_Return_Goods_Column_List">
    org.id, org.relating_return_sn, org.custom_code, org.goods_sn, org.goods_name, org.goods_return_number, org.goods_buy_number,
    org.charge_back_count, org.have_return_count, org.market_price, org.goods_price, org.extension_code, org.extension_id,
    org.settlement_price, org.share_bonus, org.share_settle, org.os_depot_code, org.price_difference, org.price_differ_num,
    org.price_differ_reason, org.return_reason, org.goods_thumb, org.goods_color_name, org.goods_size_name, org.group_name,
    org.is_real, org.is_gift, org.rank_points, org.pay_points, org.seller, org.is_good_received, org.checkin_status,
    org.quality_status, org.integral_money, org.barcode, org.remark, org.prodScanNum, org.master_order_sn, org.order_sn,
    org.sales_mode, org.to_erp, org.storage_time_stamp, org.storage_status, org.storage_treate_time, org.checkin_time,
    org.sap, org.bv_value, org.discount, org.base_bv_value, org.box_gauge, org.cost_price, mog.goods_price salePrice
  </sql>
    <select id="getReturnGoodsByReturnSn" parameterType="map" resultMap="OrderReturnGoodsResultMap">
        select
        <include refid="Order_Return_Goods_Column_List" />
        from order_return_goods org
        left join master_order_goods mog on org.master_order_sn = mog.master_order_sn and org.custom_code = mog.custom_code
            and org.extension_code = mog.extension_code
        where org.relating_return_sn = #{returnSn}
        group by org.relating_return_sn, org.extension_code, org.custom_code
    </select>

	<select id="getOrderReturnStatisticalInfo" parameterType="com.work.shop.oms.bean.OrderReturnExample" resultMap="pageListResultMap">
		SELECT oi.order_from orderFrom, orn.return_total_fee returnTotalFee
		FROM order_refund ord
        LEFT JOIN order_return orn ON ord.relating_return_sn = orn.return_sn
        LEFT JOIN master_order_info oi ON orn.master_order_sn = oi.master_order_sn
        LEFT JOIN master_order_info_extend oie ON oie.master_order_sn = oi.master_order_sn
		<include refid="Example_Where_Clause" />
	</select>
</mapper>
