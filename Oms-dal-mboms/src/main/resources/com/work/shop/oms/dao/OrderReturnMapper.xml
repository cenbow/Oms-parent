<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.work.shop.oms.dao.OrderReturnMapper">
  <resultMap id="BaseResultMap" type="com.work.shop.oms.bean.OrderReturn">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="return_sn" jdbcType="VARCHAR" property="returnSn" />
    <result column="relating_order_sn" jdbcType="VARCHAR" property="relatingOrderSn" />
    <result column="relating_order_type" jdbcType="INTEGER" property="relatingOrderType" />
    <result column="return_type" jdbcType="TINYINT" property="returnType" />
    <result column="return_order_status" jdbcType="TINYINT" property="returnOrderStatus" />
    <result column="pay_status" jdbcType="TINYINT" property="payStatus" />
    <result column="ship_status" jdbcType="TINYINT" property="shipStatus" />
    <result column="lock_status" jdbcType="INTEGER" property="lockStatus" />
    <result column="channel_code" jdbcType="VARCHAR" property="channelCode" />
    <result column="refund_type" jdbcType="TINYINT" property="refundType" />
    <result column="have_refund" jdbcType="TINYINT" property="haveRefund" />
    <result column="return_settlement_type" jdbcType="TINYINT" property="returnSettlementType" />
    <result column="process_type" jdbcType="TINYINT" property="processType" />
    <result column="timeout_status" jdbcType="INTEGER" property="timeoutStatus" />
    <result column="settle_queue" jdbcType="VARCHAR" property="settleQueue" />
    <result column="back_to_cs" jdbcType="INTEGER" property="backToCs" />
    <result column="new_order_sn" jdbcType="VARCHAR" property="newOrderSn" />
    <result column="return_reason" jdbcType="VARCHAR" property="returnReason" />
    <result column="action_user" jdbcType="VARCHAR" property="actionUser" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="bill_no" jdbcType="VARCHAR" property="billNo" />
    <result column="disposition" jdbcType="INTEGER" property="disposition" />
    <result column="return_allgoods_count" jdbcType="INTEGER" property="returnAllgoodsCount" />
    <result column="pricediffer_goods_total" jdbcType="INTEGER" property="pricedifferGoodsTotal" />
    <result column="return_total_fee" jdbcType="DECIMAL" property="returnTotalFee" />
    <result column="total_price_difference" jdbcType="DECIMAL" property="totalPriceDifference" />
    <result column="return_goods_money" jdbcType="DECIMAL" property="returnGoodsMoney" />
    <result column="return_bonus_money" jdbcType="DECIMAL" property="returnBonusMoney" />
    <result column="payment" jdbcType="REAL" property="payment" />
    <result column="return_integral_money" jdbcType="DECIMAL" property="returnIntegralMoney" />
    <result column="return_shipping" jdbcType="DECIMAL" property="returnShipping" />
    <result column="return_tax" jdbcType="DECIMAL" property="returnTax" />
    <result column="return_pack_money" jdbcType="DECIMAL" property="returnPackMoney" />
    <result column="return_card" jdbcType="DECIMAL" property="returnCard" />
    <result column="return_other_money" jdbcType="DECIMAL" property="returnOtherMoney" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="confirm_time" jdbcType="TIMESTAMP" property="confirmTime" />
    <result column="clear_time" jdbcType="TIMESTAMP" property="clearTime" />
    <result column="lock_time" jdbcType="TIMESTAMP" property="lockTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="integral_money" jdbcType="DECIMAL" property="integralMoney" />
    <result column="master_order_sn" jdbcType="VARCHAR" property="masterOrderSn" />
    <result column="init_clear_time" jdbcType="TIMESTAMP" property="initClearTime" />
    <result column="to_erp" jdbcType="TINYINT" property="toErp" />
    <result column="storage_status" jdbcType="TINYINT" property="storageStatus" />
    <result column="settle_status" jdbcType="TINYINT" property="settleStatus" />
    <result column="site_code" jdbcType="VARCHAR" property="siteCode" />
    <result column="shop_name" jdbcType="VARCHAR" property="shopName" />
    <result column="bv_value" jdbcType="INTEGER" property="bvValue" />
    <result column="points" jdbcType="DECIMAL" property="points" />
    <result column="base_bv_value" jdbcType="INTEGER" property="baseBvValue" />
    <result column="store_code" jdbcType="VARCHAR" property="storeCode" />
    <result column="store_name" jdbcType="VARCHAR" property="storeName" />
    <result column="sellted_bill_status" property="selltedBillStatus" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.work.shop.oms.bean.OrderReturn">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="return_desc" jdbcType="LONGVARCHAR" property="returnDesc" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    return_sn, relating_order_sn, relating_order_type, return_type, return_order_status, 
    pay_status, ship_status, lock_status, channel_code, refund_type, have_refund, return_settlement_type, 
    process_type, timeout_status, settle_queue, back_to_cs, new_order_sn, return_reason, 
    action_user, user_id, bill_no, disposition, return_allgoods_count, pricediffer_goods_total, 
    return_total_fee, total_price_difference, return_goods_money, return_bonus_money, 
    payment, return_integral_money, return_shipping, return_tax, return_pack_money, return_card, 
    return_other_money, add_time, confirm_time, clear_time, lock_time, update_time, integral_money, 
    master_order_sn, init_clear_time, to_erp, storage_status, settle_status, site_code, 
    shop_name, bv_value, points, base_bv_value, store_code, store_name, sellted_bill_status
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    return_desc
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.work.shop.oms.bean.OrderReturnExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from order_return
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.work.shop.oms.bean.OrderReturnExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_return
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="criteria.valid">
      <foreach collection="criteria.criteria" item="criterion">
        <if test="criterion.limitValue">
          limit ${criterion.value},${criterion.secondValue}
        </if>
      </foreach>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from order_return
    where return_sn = #{returnSn,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from order_return
    where return_sn = #{returnSn,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.work.shop.oms.bean.OrderReturnExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from order_return
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.work.shop.oms.bean.OrderReturn">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into order_return (return_sn, relating_order_sn, relating_order_type, 
      return_type, return_order_status, pay_status, 
      ship_status, lock_status, channel_code, 
      refund_type, have_refund, return_settlement_type, 
      process_type, timeout_status, settle_queue, 
      back_to_cs, new_order_sn, return_reason, 
      action_user, user_id, bill_no, 
      disposition, return_allgoods_count, pricediffer_goods_total, 
      return_total_fee, total_price_difference, return_goods_money, 
      return_bonus_money, payment, return_integral_money, 
      return_shipping, return_tax, return_pack_money, 
      return_card, return_other_money, add_time, 
      confirm_time, clear_time, lock_time, 
      update_time, integral_money, master_order_sn, 
      init_clear_time, to_erp, storage_status, 
      settle_status, site_code, shop_name, 
      bv_value, points, base_bv_value, 
      store_code, store_name, return_desc, sellted_bill_status
      )
    values (#{returnSn,jdbcType=VARCHAR}, #{relatingOrderSn,jdbcType=VARCHAR}, #{relatingOrderType,jdbcType=INTEGER}, 
      #{returnType,jdbcType=TINYINT}, #{returnOrderStatus,jdbcType=TINYINT}, #{payStatus,jdbcType=TINYINT}, 
      #{shipStatus,jdbcType=TINYINT}, #{lockStatus,jdbcType=INTEGER}, #{channelCode,jdbcType=VARCHAR}, 
      #{refundType,jdbcType=TINYINT}, #{haveRefund,jdbcType=TINYINT}, #{returnSettlementType,jdbcType=TINYINT}, 
      #{processType,jdbcType=TINYINT}, #{timeoutStatus,jdbcType=INTEGER}, #{settleQueue,jdbcType=VARCHAR}, 
      #{backToCs,jdbcType=INTEGER}, #{newOrderSn,jdbcType=VARCHAR}, #{returnReason,jdbcType=VARCHAR}, 
      #{actionUser,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{billNo,jdbcType=VARCHAR}, 
      #{disposition,jdbcType=INTEGER}, #{returnAllgoodsCount,jdbcType=INTEGER}, #{pricedifferGoodsTotal,jdbcType=INTEGER}, 
      #{returnTotalFee,jdbcType=DECIMAL}, #{totalPriceDifference,jdbcType=DECIMAL}, #{returnGoodsMoney,jdbcType=DECIMAL}, 
      #{returnBonusMoney,jdbcType=DECIMAL}, #{payment,jdbcType=REAL}, #{returnIntegralMoney,jdbcType=DECIMAL}, 
      #{returnShipping,jdbcType=DECIMAL}, #{returnTax,jdbcType=DECIMAL}, #{returnPackMoney,jdbcType=DECIMAL}, 
      #{returnCard,jdbcType=DECIMAL}, #{returnOtherMoney,jdbcType=DECIMAL}, #{addTime,jdbcType=TIMESTAMP}, 
      #{confirmTime,jdbcType=TIMESTAMP}, #{clearTime,jdbcType=TIMESTAMP}, #{lockTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{integralMoney,jdbcType=DECIMAL}, #{masterOrderSn,jdbcType=VARCHAR}, 
      #{initClearTime,jdbcType=TIMESTAMP}, #{toErp,jdbcType=TINYINT}, #{storageStatus,jdbcType=TINYINT}, 
      #{settleStatus,jdbcType=TINYINT}, #{siteCode,jdbcType=VARCHAR}, #{shopName,jdbcType=VARCHAR}, 
      #{bvValue,jdbcType=INTEGER}, #{points,jdbcType=DECIMAL}, #{baseBvValue,jdbcType=INTEGER}, 
      #{storeCode,jdbcType=VARCHAR}, #{storeName,jdbcType=VARCHAR}, #{returnDesc,jdbcType=LONGVARCHAR}, #{selltedBillStatus}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.work.shop.oms.bean.OrderReturn">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into order_return
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="returnSn != null">
        return_sn,
      </if>
      <if test="relatingOrderSn != null">
        relating_order_sn,
      </if>
      <if test="relatingOrderType != null">
        relating_order_type,
      </if>
      <if test="returnType != null">
        return_type,
      </if>
      <if test="returnOrderStatus != null">
        return_order_status,
      </if>
      <if test="payStatus != null">
        pay_status,
      </if>
      <if test="shipStatus != null">
        ship_status,
      </if>
      <if test="lockStatus != null">
        lock_status,
      </if>
      <if test="channelCode != null">
        channel_code,
      </if>
      <if test="refundType != null">
        refund_type,
      </if>
      <if test="haveRefund != null">
        have_refund,
      </if>
      <if test="returnSettlementType != null">
        return_settlement_type,
      </if>
      <if test="processType != null">
        process_type,
      </if>
      <if test="timeoutStatus != null">
        timeout_status,
      </if>
      <if test="settleQueue != null">
        settle_queue,
      </if>
      <if test="backToCs != null">
        back_to_cs,
      </if>
      <if test="newOrderSn != null">
        new_order_sn,
      </if>
      <if test="returnReason != null">
        return_reason,
      </if>
      <if test="actionUser != null">
        action_user,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="billNo != null">
        bill_no,
      </if>
      <if test="disposition != null">
        disposition,
      </if>
      <if test="returnAllgoodsCount != null">
        return_allgoods_count,
      </if>
      <if test="pricedifferGoodsTotal != null">
        pricediffer_goods_total,
      </if>
      <if test="returnTotalFee != null">
        return_total_fee,
      </if>
      <if test="totalPriceDifference != null">
        total_price_difference,
      </if>
      <if test="returnGoodsMoney != null">
        return_goods_money,
      </if>
      <if test="returnBonusMoney != null">
        return_bonus_money,
      </if>
      <if test="payment != null">
        payment,
      </if>
      <if test="returnIntegralMoney != null">
        return_integral_money,
      </if>
      <if test="returnShipping != null">
        return_shipping,
      </if>
      <if test="returnTax != null">
        return_tax,
      </if>
      <if test="returnPackMoney != null">
        return_pack_money,
      </if>
      <if test="returnCard != null">
        return_card,
      </if>
      <if test="returnOtherMoney != null">
        return_other_money,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="confirmTime != null">
        confirm_time,
      </if>
      <if test="clearTime != null">
        clear_time,
      </if>
      <if test="lockTime != null">
        lock_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="integralMoney != null">
        integral_money,
      </if>
      <if test="masterOrderSn != null">
        master_order_sn,
      </if>
      <if test="initClearTime != null">
        init_clear_time,
      </if>
      <if test="toErp != null">
        to_erp,
      </if>
      <if test="storageStatus != null">
        storage_status,
      </if>
      <if test="settleStatus != null">
        settle_status,
      </if>
      <if test="siteCode != null">
        site_code,
      </if>
      <if test="shopName != null">
        shop_name,
      </if>
      <if test="bvValue != null">
        bv_value,
      </if>
      <if test="points != null">
        points,
      </if>
      <if test="baseBvValue != null">
        base_bv_value,
      </if>
      <if test="storeCode != null">
        store_code,
      </if>
      <if test="storeName != null">
        store_name,
      </if>
      <if test="returnDesc != null">
        return_desc,
      </if>
      <if test="selltedBillStatus != null">
        sellted_bill_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="returnSn != null">
        #{returnSn,jdbcType=VARCHAR},
      </if>
      <if test="relatingOrderSn != null">
        #{relatingOrderSn,jdbcType=VARCHAR},
      </if>
      <if test="relatingOrderType != null">
        #{relatingOrderType,jdbcType=INTEGER},
      </if>
      <if test="returnType != null">
        #{returnType,jdbcType=TINYINT},
      </if>
      <if test="returnOrderStatus != null">
        #{returnOrderStatus,jdbcType=TINYINT},
      </if>
      <if test="payStatus != null">
        #{payStatus,jdbcType=TINYINT},
      </if>
      <if test="shipStatus != null">
        #{shipStatus,jdbcType=TINYINT},
      </if>
      <if test="lockStatus != null">
        #{lockStatus,jdbcType=INTEGER},
      </if>
      <if test="channelCode != null">
        #{channelCode,jdbcType=VARCHAR},
      </if>
      <if test="refundType != null">
        #{refundType,jdbcType=TINYINT},
      </if>
      <if test="haveRefund != null">
        #{haveRefund,jdbcType=TINYINT},
      </if>
      <if test="returnSettlementType != null">
        #{returnSettlementType,jdbcType=TINYINT},
      </if>
      <if test="processType != null">
        #{processType,jdbcType=TINYINT},
      </if>
      <if test="timeoutStatus != null">
        #{timeoutStatus,jdbcType=INTEGER},
      </if>
      <if test="settleQueue != null">
        #{settleQueue,jdbcType=VARCHAR},
      </if>
      <if test="backToCs != null">
        #{backToCs,jdbcType=INTEGER},
      </if>
      <if test="newOrderSn != null">
        #{newOrderSn,jdbcType=VARCHAR},
      </if>
      <if test="returnReason != null">
        #{returnReason,jdbcType=VARCHAR},
      </if>
      <if test="actionUser != null">
        #{actionUser,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="billNo != null">
        #{billNo,jdbcType=VARCHAR},
      </if>
      <if test="disposition != null">
        #{disposition,jdbcType=INTEGER},
      </if>
      <if test="returnAllgoodsCount != null">
        #{returnAllgoodsCount,jdbcType=INTEGER},
      </if>
      <if test="pricedifferGoodsTotal != null">
        #{pricedifferGoodsTotal,jdbcType=INTEGER},
      </if>
      <if test="returnTotalFee != null">
        #{returnTotalFee,jdbcType=DECIMAL},
      </if>
      <if test="totalPriceDifference != null">
        #{totalPriceDifference,jdbcType=DECIMAL},
      </if>
      <if test="returnGoodsMoney != null">
        #{returnGoodsMoney,jdbcType=DECIMAL},
      </if>
      <if test="returnBonusMoney != null">
        #{returnBonusMoney,jdbcType=DECIMAL},
      </if>
      <if test="payment != null">
        #{payment,jdbcType=REAL},
      </if>
      <if test="returnIntegralMoney != null">
        #{returnIntegralMoney,jdbcType=DECIMAL},
      </if>
      <if test="returnShipping != null">
        #{returnShipping,jdbcType=DECIMAL},
      </if>
      <if test="returnTax != null">
        #{returnTax,jdbcType=DECIMAL},
      </if>
      <if test="returnPackMoney != null">
        #{returnPackMoney,jdbcType=DECIMAL},
      </if>
      <if test="returnCard != null">
        #{returnCard,jdbcType=DECIMAL},
      </if>
      <if test="returnOtherMoney != null">
        #{returnOtherMoney,jdbcType=DECIMAL},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="confirmTime != null">
        #{confirmTime,jdbcType=TIMESTAMP},
      </if>
      <if test="clearTime != null">
        #{clearTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lockTime != null">
        #{lockTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="integralMoney != null">
        #{integralMoney,jdbcType=DECIMAL},
      </if>
      <if test="masterOrderSn != null">
        #{masterOrderSn,jdbcType=VARCHAR},
      </if>
      <if test="initClearTime != null">
        #{initClearTime,jdbcType=TIMESTAMP},
      </if>
      <if test="toErp != null">
        #{toErp,jdbcType=TINYINT},
      </if>
      <if test="storageStatus != null">
        #{storageStatus,jdbcType=TINYINT},
      </if>
      <if test="settleStatus != null">
        #{settleStatus,jdbcType=TINYINT},
      </if>
      <if test="siteCode != null">
        #{siteCode,jdbcType=VARCHAR},
      </if>
      <if test="shopName != null">
        #{shopName,jdbcType=VARCHAR},
      </if>
      <if test="bvValue != null">
        #{bvValue,jdbcType=INTEGER},
      </if>
      <if test="points != null">
        #{points,jdbcType=DECIMAL},
      </if>
      <if test="baseBvValue != null">
        #{baseBvValue,jdbcType=INTEGER},
      </if>
      <if test="storeCode != null">
        #{storeCode,jdbcType=VARCHAR},
      </if>
      <if test="storeName != null">
        #{storeName,jdbcType=VARCHAR},
      </if>
      <if test="returnDesc != null">
        #{returnDesc,jdbcType=LONGVARCHAR},
      </if>
      <if test="selltedBillStatus != null">
        #{selltedBillStatus},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.work.shop.oms.bean.OrderReturnExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from order_return
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update order_return
    <set>
      <if test="record.returnSn != null">
        return_sn = #{record.returnSn,jdbcType=VARCHAR},
      </if>
      <if test="record.relatingOrderSn != null">
        relating_order_sn = #{record.relatingOrderSn,jdbcType=VARCHAR},
      </if>
      <if test="record.relatingOrderType != null">
        relating_order_type = #{record.relatingOrderType,jdbcType=INTEGER},
      </if>
      <if test="record.returnType != null">
        return_type = #{record.returnType,jdbcType=TINYINT},
      </if>
      <if test="record.returnOrderStatus != null">
        return_order_status = #{record.returnOrderStatus,jdbcType=TINYINT},
      </if>
      <if test="record.payStatus != null">
        pay_status = #{record.payStatus,jdbcType=TINYINT},
      </if>
      <if test="record.shipStatus != null">
        ship_status = #{record.shipStatus,jdbcType=TINYINT},
      </if>
      <if test="record.lockStatus != null">
        lock_status = #{record.lockStatus,jdbcType=INTEGER},
      </if>
      <if test="record.channelCode != null">
        channel_code = #{record.channelCode,jdbcType=VARCHAR},
      </if>
      <if test="record.refundType != null">
        refund_type = #{record.refundType,jdbcType=TINYINT},
      </if>
      <if test="record.haveRefund != null">
        have_refund = #{record.haveRefund,jdbcType=TINYINT},
      </if>
      <if test="record.returnSettlementType != null">
        return_settlement_type = #{record.returnSettlementType,jdbcType=TINYINT},
      </if>
      <if test="record.processType != null">
        process_type = #{record.processType,jdbcType=TINYINT},
      </if>
      <if test="record.timeoutStatus != null">
        timeout_status = #{record.timeoutStatus,jdbcType=INTEGER},
      </if>
      <if test="record.settleQueue != null">
        settle_queue = #{record.settleQueue,jdbcType=VARCHAR},
      </if>
      <if test="record.backToCs != null">
        back_to_cs = #{record.backToCs,jdbcType=INTEGER},
      </if>
      <if test="record.newOrderSn != null">
        new_order_sn = #{record.newOrderSn,jdbcType=VARCHAR},
      </if>
      <if test="record.returnReason != null">
        return_reason = #{record.returnReason,jdbcType=VARCHAR},
      </if>
      <if test="record.actionUser != null">
        action_user = #{record.actionUser,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.billNo != null">
        bill_no = #{record.billNo,jdbcType=VARCHAR},
      </if>
      <if test="record.disposition != null">
        disposition = #{record.disposition,jdbcType=INTEGER},
      </if>
      <if test="record.returnAllgoodsCount != null">
        return_allgoods_count = #{record.returnAllgoodsCount,jdbcType=INTEGER},
      </if>
      <if test="record.pricedifferGoodsTotal != null">
        pricediffer_goods_total = #{record.pricedifferGoodsTotal,jdbcType=INTEGER},
      </if>
      <if test="record.returnTotalFee != null">
        return_total_fee = #{record.returnTotalFee,jdbcType=DECIMAL},
      </if>
      <if test="record.totalPriceDifference != null">
        total_price_difference = #{record.totalPriceDifference,jdbcType=DECIMAL},
      </if>
      <if test="record.returnGoodsMoney != null">
        return_goods_money = #{record.returnGoodsMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.returnBonusMoney != null">
        return_bonus_money = #{record.returnBonusMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.payment != null">
        payment = #{record.payment,jdbcType=REAL},
      </if>
      <if test="record.returnIntegralMoney != null">
        return_integral_money = #{record.returnIntegralMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.returnShipping != null">
        return_shipping = #{record.returnShipping,jdbcType=DECIMAL},
      </if>
      <if test="record.returnTax != null">
        return_tax = #{record.returnTax,jdbcType=DECIMAL},
      </if>
      <if test="record.returnPackMoney != null">
        return_pack_money = #{record.returnPackMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.returnCard != null">
        return_card = #{record.returnCard,jdbcType=DECIMAL},
      </if>
      <if test="record.returnOtherMoney != null">
        return_other_money = #{record.returnOtherMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.addTime != null">
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.confirmTime != null">
        confirm_time = #{record.confirmTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.clearTime != null">
        clear_time = #{record.clearTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lockTime != null">
        lock_time = #{record.lockTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.integralMoney != null">
        integral_money = #{record.integralMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.masterOrderSn != null">
        master_order_sn = #{record.masterOrderSn,jdbcType=VARCHAR},
      </if>
      <if test="record.initClearTime != null">
        init_clear_time = #{record.initClearTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.toErp != null">
        to_erp = #{record.toErp,jdbcType=TINYINT},
      </if>
      <if test="record.storageStatus != null">
        storage_status = #{record.storageStatus,jdbcType=TINYINT},
      </if>
      <if test="record.settleStatus != null">
        settle_status = #{record.settleStatus,jdbcType=TINYINT},
      </if>
      <if test="record.siteCode != null">
        site_code = #{record.siteCode,jdbcType=VARCHAR},
      </if>
      <if test="record.shopName != null">
        shop_name = #{record.shopName,jdbcType=VARCHAR},
      </if>
      <if test="record.bvValue != null">
        bv_value = #{record.bvValue,jdbcType=INTEGER},
      </if>
      <if test="record.points != null">
        points = #{record.points,jdbcType=DECIMAL},
      </if>
      <if test="record.baseBvValue != null">
        base_bv_value = #{record.baseBvValue,jdbcType=INTEGER},
      </if>
      <if test="record.storeCode != null">
        store_code = #{record.storeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.storeName != null">
        store_name = #{record.storeName,jdbcType=VARCHAR},
      </if>
      <if test="record.returnDesc != null">
        return_desc = #{record.returnDesc,jdbcType=LONGVARCHAR},
      </if>
        <if test="record.isDel != null">
            is_del = #{record.isDel,jdbcType=INTEGER},
        </if>
        <if test="record.selltedBillStatus != null">
            sellted_bill_status = #{record.selltedBillStatus},
        </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update order_return
    set return_sn = #{record.returnSn,jdbcType=VARCHAR},
      relating_order_sn = #{record.relatingOrderSn,jdbcType=VARCHAR},
      relating_order_type = #{record.relatingOrderType,jdbcType=INTEGER},
      return_type = #{record.returnType,jdbcType=TINYINT},
      return_order_status = #{record.returnOrderStatus,jdbcType=TINYINT},
      pay_status = #{record.payStatus,jdbcType=TINYINT},
      ship_status = #{record.shipStatus,jdbcType=TINYINT},
      lock_status = #{record.lockStatus,jdbcType=INTEGER},
      channel_code = #{record.channelCode,jdbcType=VARCHAR},
      refund_type = #{record.refundType,jdbcType=TINYINT},
      have_refund = #{record.haveRefund,jdbcType=TINYINT},
      return_settlement_type = #{record.returnSettlementType,jdbcType=TINYINT},
      process_type = #{record.processType,jdbcType=TINYINT},
      timeout_status = #{record.timeoutStatus,jdbcType=INTEGER},
      settle_queue = #{record.settleQueue,jdbcType=VARCHAR},
      back_to_cs = #{record.backToCs,jdbcType=INTEGER},
      new_order_sn = #{record.newOrderSn,jdbcType=VARCHAR},
      return_reason = #{record.returnReason,jdbcType=VARCHAR},
      action_user = #{record.actionUser,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      bill_no = #{record.billNo,jdbcType=VARCHAR},
      disposition = #{record.disposition,jdbcType=INTEGER},
      return_allgoods_count = #{record.returnAllgoodsCount,jdbcType=INTEGER},
      pricediffer_goods_total = #{record.pricedifferGoodsTotal,jdbcType=INTEGER},
      return_total_fee = #{record.returnTotalFee,jdbcType=DECIMAL},
      total_price_difference = #{record.totalPriceDifference,jdbcType=DECIMAL},
      return_goods_money = #{record.returnGoodsMoney,jdbcType=DECIMAL},
      return_bonus_money = #{record.returnBonusMoney,jdbcType=DECIMAL},
      payment = #{record.payment,jdbcType=REAL},
      return_integral_money = #{record.returnIntegralMoney,jdbcType=DECIMAL},
      return_shipping = #{record.returnShipping,jdbcType=DECIMAL},
      return_tax = #{record.returnTax,jdbcType=DECIMAL},
      return_pack_money = #{record.returnPackMoney,jdbcType=DECIMAL},
      return_card = #{record.returnCard,jdbcType=DECIMAL},
      return_other_money = #{record.returnOtherMoney,jdbcType=DECIMAL},
      add_time = #{record.addTime,jdbcType=TIMESTAMP},
      confirm_time = #{record.confirmTime,jdbcType=TIMESTAMP},
      clear_time = #{record.clearTime,jdbcType=TIMESTAMP},
      lock_time = #{record.lockTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      integral_money = #{record.integralMoney,jdbcType=DECIMAL},
      master_order_sn = #{record.masterOrderSn,jdbcType=VARCHAR},
      init_clear_time = #{record.initClearTime,jdbcType=TIMESTAMP},
      to_erp = #{record.toErp,jdbcType=TINYINT},
      storage_status = #{record.storageStatus,jdbcType=TINYINT},
      settle_status = #{record.settleStatus,jdbcType=TINYINT},
      site_code = #{record.siteCode,jdbcType=VARCHAR},
      shop_name = #{record.shopName,jdbcType=VARCHAR},
      bv_value = #{record.bvValue,jdbcType=INTEGER},
      points = #{record.points,jdbcType=DECIMAL},
      base_bv_value = #{record.baseBvValue,jdbcType=INTEGER},
      store_code = #{record.storeCode,jdbcType=VARCHAR},
      store_name = #{record.storeName,jdbcType=VARCHAR},
      is_del = #{record.isDel,jdbcType=INTEGER},
      return_desc = #{record.returnDesc,jdbcType=LONGVARCHAR},
      sellted_bill_status = #{record.selltedBillStatus}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update order_return
    set return_sn = #{record.returnSn,jdbcType=VARCHAR},
      relating_order_sn = #{record.relatingOrderSn,jdbcType=VARCHAR},
      relating_order_type = #{record.relatingOrderType,jdbcType=INTEGER},
      return_type = #{record.returnType,jdbcType=TINYINT},
      return_order_status = #{record.returnOrderStatus,jdbcType=TINYINT},
      pay_status = #{record.payStatus,jdbcType=TINYINT},
      ship_status = #{record.shipStatus,jdbcType=TINYINT},
      lock_status = #{record.lockStatus,jdbcType=INTEGER},
      channel_code = #{record.channelCode,jdbcType=VARCHAR},
      refund_type = #{record.refundType,jdbcType=TINYINT},
      have_refund = #{record.haveRefund,jdbcType=TINYINT},
      return_settlement_type = #{record.returnSettlementType,jdbcType=TINYINT},
      process_type = #{record.processType,jdbcType=TINYINT},
      timeout_status = #{record.timeoutStatus,jdbcType=INTEGER},
      settle_queue = #{record.settleQueue,jdbcType=VARCHAR},
      back_to_cs = #{record.backToCs,jdbcType=INTEGER},
      new_order_sn = #{record.newOrderSn,jdbcType=VARCHAR},
      return_reason = #{record.returnReason,jdbcType=VARCHAR},
      action_user = #{record.actionUser,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      bill_no = #{record.billNo,jdbcType=VARCHAR},
      disposition = #{record.disposition,jdbcType=INTEGER},
      return_allgoods_count = #{record.returnAllgoodsCount,jdbcType=INTEGER},
      pricediffer_goods_total = #{record.pricedifferGoodsTotal,jdbcType=INTEGER},
      return_total_fee = #{record.returnTotalFee,jdbcType=DECIMAL},
      total_price_difference = #{record.totalPriceDifference,jdbcType=DECIMAL},
      return_goods_money = #{record.returnGoodsMoney,jdbcType=DECIMAL},
      return_bonus_money = #{record.returnBonusMoney,jdbcType=DECIMAL},
      payment = #{record.payment,jdbcType=REAL},
      return_integral_money = #{record.returnIntegralMoney,jdbcType=DECIMAL},
      return_shipping = #{record.returnShipping,jdbcType=DECIMAL},
      return_tax = #{record.returnTax,jdbcType=DECIMAL},
      return_pack_money = #{record.returnPackMoney,jdbcType=DECIMAL},
      return_card = #{record.returnCard,jdbcType=DECIMAL},
      return_other_money = #{record.returnOtherMoney,jdbcType=DECIMAL},
      add_time = #{record.addTime,jdbcType=TIMESTAMP},
      confirm_time = #{record.confirmTime,jdbcType=TIMESTAMP},
      clear_time = #{record.clearTime,jdbcType=TIMESTAMP},
      lock_time = #{record.lockTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      integral_money = #{record.integralMoney,jdbcType=DECIMAL},
      master_order_sn = #{record.masterOrderSn,jdbcType=VARCHAR},
      init_clear_time = #{record.initClearTime,jdbcType=TIMESTAMP},
      to_erp = #{record.toErp,jdbcType=TINYINT},
      storage_status = #{record.storageStatus,jdbcType=TINYINT},
      settle_status = #{record.settleStatus,jdbcType=TINYINT},
      site_code = #{record.siteCode,jdbcType=VARCHAR},
      shop_name = #{record.shopName,jdbcType=VARCHAR},
      bv_value = #{record.bvValue,jdbcType=INTEGER},
      points = #{record.points,jdbcType=DECIMAL},
      base_bv_value = #{record.baseBvValue,jdbcType=INTEGER},
      store_code = #{record.storeCode,jdbcType=VARCHAR},
      is_del = #{record.isDel,jdbcType=INTEGER},
      store_name = #{record.storeName,jdbcType=VARCHAR},
      sellted_bill_status = #{record.selltedBillStatus}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.work.shop.oms.bean.OrderReturn">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update order_return
    <set>
      <if test="relatingOrderSn != null">
        relating_order_sn = #{relatingOrderSn,jdbcType=VARCHAR},
      </if>
      <if test="relatingOrderType != null">
        relating_order_type = #{relatingOrderType,jdbcType=INTEGER},
      </if>
      <if test="returnType != null">
        return_type = #{returnType,jdbcType=TINYINT},
      </if>
      <if test="returnOrderStatus != null">
        return_order_status = #{returnOrderStatus,jdbcType=TINYINT},
      </if>
      <if test="payStatus != null">
        pay_status = #{payStatus,jdbcType=TINYINT},
      </if>
      <if test="shipStatus != null">
        ship_status = #{shipStatus,jdbcType=TINYINT},
      </if>
      <if test="lockStatus != null">
        lock_status = #{lockStatus,jdbcType=INTEGER},
      </if>
      <if test="channelCode != null">
        channel_code = #{channelCode,jdbcType=VARCHAR},
      </if>
      <if test="refundType != null">
        refund_type = #{refundType,jdbcType=TINYINT},
      </if>
      <if test="haveRefund != null">
        have_refund = #{haveRefund,jdbcType=TINYINT},
      </if>
      <if test="returnSettlementType != null">
        return_settlement_type = #{returnSettlementType,jdbcType=TINYINT},
      </if>
      <if test="processType != null">
        process_type = #{processType,jdbcType=TINYINT},
      </if>
      <if test="timeoutStatus != null">
        timeout_status = #{timeoutStatus,jdbcType=INTEGER},
      </if>
      <if test="settleQueue != null">
        settle_queue = #{settleQueue,jdbcType=VARCHAR},
      </if>
      <if test="backToCs != null">
        back_to_cs = #{backToCs,jdbcType=INTEGER},
      </if>
      <if test="newOrderSn != null">
        new_order_sn = #{newOrderSn,jdbcType=VARCHAR},
      </if>
      <if test="returnReason != null">
        return_reason = #{returnReason,jdbcType=VARCHAR},
      </if>
      <if test="actionUser != null">
        action_user = #{actionUser,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="billNo != null">
        bill_no = #{billNo,jdbcType=VARCHAR},
      </if>
      <if test="disposition != null">
        disposition = #{disposition,jdbcType=INTEGER},
      </if>
      <if test="returnAllgoodsCount != null">
        return_allgoods_count = #{returnAllgoodsCount,jdbcType=INTEGER},
      </if>
      <if test="pricedifferGoodsTotal != null">
        pricediffer_goods_total = #{pricedifferGoodsTotal,jdbcType=INTEGER},
      </if>
      <if test="returnTotalFee != null">
        return_total_fee = #{returnTotalFee,jdbcType=DECIMAL},
      </if>
      <if test="totalPriceDifference != null">
        total_price_difference = #{totalPriceDifference,jdbcType=DECIMAL},
      </if>
      <if test="returnGoodsMoney != null">
        return_goods_money = #{returnGoodsMoney,jdbcType=DECIMAL},
      </if>
      <if test="returnBonusMoney != null">
        return_bonus_money = #{returnBonusMoney,jdbcType=DECIMAL},
      </if>
      <if test="payment != null">
        payment = #{payment,jdbcType=REAL},
      </if>
      <if test="returnIntegralMoney != null">
        return_integral_money = #{returnIntegralMoney,jdbcType=DECIMAL},
      </if>
      <if test="returnShipping != null">
        return_shipping = #{returnShipping,jdbcType=DECIMAL},
      </if>
      <if test="returnTax != null">
        return_tax = #{returnTax,jdbcType=DECIMAL},
      </if>
      <if test="returnPackMoney != null">
        return_pack_money = #{returnPackMoney,jdbcType=DECIMAL},
      </if>
      <if test="returnCard != null">
        return_card = #{returnCard,jdbcType=DECIMAL},
      </if>
      <if test="returnOtherMoney != null">
        return_other_money = #{returnOtherMoney,jdbcType=DECIMAL},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="confirmTime != null">
        confirm_time = #{confirmTime,jdbcType=TIMESTAMP},
      </if>
      <if test="clearTime != null">
        clear_time = #{clearTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lockTime != null">
        lock_time = #{lockTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="integralMoney != null">
        integral_money = #{integralMoney,jdbcType=DECIMAL},
      </if>
      <if test="masterOrderSn != null">
        master_order_sn = #{masterOrderSn,jdbcType=VARCHAR},
      </if>
      <if test="initClearTime != null">
        init_clear_time = #{initClearTime,jdbcType=TIMESTAMP},
      </if>
      <if test="toErp != null">
        to_erp = #{toErp,jdbcType=TINYINT},
      </if>
      <if test="storageStatus != null">
        storage_status = #{storageStatus,jdbcType=TINYINT},
      </if>
      <if test="settleStatus != null">
        settle_status = #{settleStatus,jdbcType=TINYINT},
      </if>
      <if test="siteCode != null">
        site_code = #{siteCode,jdbcType=VARCHAR},
      </if>
      <if test="shopName != null">
        shop_name = #{shopName,jdbcType=VARCHAR},
      </if>
      <if test="bvValue != null">
        bv_value = #{bvValue,jdbcType=INTEGER},
      </if>
      <if test="points != null">
        points = #{points,jdbcType=DECIMAL},
      </if>
      <if test="baseBvValue != null">
        base_bv_value = #{baseBvValue,jdbcType=INTEGER},
      </if>
      <if test="storeCode != null">
        store_code = #{storeCode,jdbcType=VARCHAR},
      </if>
      <if test="storeName != null">
        store_name = #{storeName,jdbcType=VARCHAR},
      </if>
      <if test="returnDesc != null">
        return_desc = #{returnDesc,jdbcType=LONGVARCHAR},
      </if>
        <if test="isDel != null">
            is_del = #{isDel,jdbcType=INTEGER},
        </if>
        <if test="selltedBillStatus != null">
            sellted_bill_status = #{selltedBillStatus},
        </if>

    </set>
    where return_sn = #{returnSn,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.work.shop.oms.bean.OrderReturn">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update order_return
    set relating_order_sn = #{relatingOrderSn,jdbcType=VARCHAR},
      relating_order_type = #{relatingOrderType,jdbcType=INTEGER},
      return_type = #{returnType,jdbcType=TINYINT},
      return_order_status = #{returnOrderStatus,jdbcType=TINYINT},
      pay_status = #{payStatus,jdbcType=TINYINT},
      ship_status = #{shipStatus,jdbcType=TINYINT},
      lock_status = #{lockStatus,jdbcType=INTEGER},
      channel_code = #{channelCode,jdbcType=VARCHAR},
      refund_type = #{refundType,jdbcType=TINYINT},
      have_refund = #{haveRefund,jdbcType=TINYINT},
      return_settlement_type = #{returnSettlementType,jdbcType=TINYINT},
      process_type = #{processType,jdbcType=TINYINT},
      timeout_status = #{timeoutStatus,jdbcType=INTEGER},
      settle_queue = #{settleQueue,jdbcType=VARCHAR},
      back_to_cs = #{backToCs,jdbcType=INTEGER},
      new_order_sn = #{newOrderSn,jdbcType=VARCHAR},
      return_reason = #{returnReason,jdbcType=VARCHAR},
      action_user = #{actionUser,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      bill_no = #{billNo,jdbcType=VARCHAR},
      disposition = #{disposition,jdbcType=INTEGER},
      return_allgoods_count = #{returnAllgoodsCount,jdbcType=INTEGER},
      pricediffer_goods_total = #{pricedifferGoodsTotal,jdbcType=INTEGER},
      return_total_fee = #{returnTotalFee,jdbcType=DECIMAL},
      total_price_difference = #{totalPriceDifference,jdbcType=DECIMAL},
      return_goods_money = #{returnGoodsMoney,jdbcType=DECIMAL},
      return_bonus_money = #{returnBonusMoney,jdbcType=DECIMAL},
      payment = #{payment,jdbcType=REAL},
      return_integral_money = #{returnIntegralMoney,jdbcType=DECIMAL},
      return_shipping = #{returnShipping,jdbcType=DECIMAL},
      return_tax = #{returnTax,jdbcType=DECIMAL},
      return_pack_money = #{returnPackMoney,jdbcType=DECIMAL},
      return_card = #{returnCard,jdbcType=DECIMAL},
      return_other_money = #{returnOtherMoney,jdbcType=DECIMAL},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      confirm_time = #{confirmTime,jdbcType=TIMESTAMP},
      clear_time = #{clearTime,jdbcType=TIMESTAMP},
      lock_time = #{lockTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      integral_money = #{integralMoney,jdbcType=DECIMAL},
      master_order_sn = #{masterOrderSn,jdbcType=VARCHAR},
      init_clear_time = #{initClearTime,jdbcType=TIMESTAMP},
      to_erp = #{toErp,jdbcType=TINYINT},
      storage_status = #{storageStatus,jdbcType=TINYINT},
      settle_status = #{settleStatus,jdbcType=TINYINT},
      site_code = #{siteCode,jdbcType=VARCHAR},
      shop_name = #{shopName,jdbcType=VARCHAR},
      bv_value = #{bvValue,jdbcType=INTEGER},
      points = #{points,jdbcType=DECIMAL},
      base_bv_value = #{baseBvValue,jdbcType=INTEGER},
      store_code = #{storeCode,jdbcType=VARCHAR},
      store_name = #{storeName,jdbcType=VARCHAR},
      is_del = #{isDel,jdbcType=INTEGER},
      return_desc = #{returnDesc,jdbcType=LONGVARCHAR},
      sellted_bill_status = #{selltedBillStatus}
    where return_sn = #{returnSn,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.work.shop.oms.bean.OrderReturn">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update order_return
    set relating_order_sn = #{relatingOrderSn,jdbcType=VARCHAR},
      relating_order_type = #{relatingOrderType,jdbcType=INTEGER},
      return_type = #{returnType,jdbcType=TINYINT},
      return_order_status = #{returnOrderStatus,jdbcType=TINYINT},
      pay_status = #{payStatus,jdbcType=TINYINT},
      ship_status = #{shipStatus,jdbcType=TINYINT},
      lock_status = #{lockStatus,jdbcType=INTEGER},
      channel_code = #{channelCode,jdbcType=VARCHAR},
      refund_type = #{refundType,jdbcType=TINYINT},
      have_refund = #{haveRefund,jdbcType=TINYINT},
      return_settlement_type = #{returnSettlementType,jdbcType=TINYINT},
      process_type = #{processType,jdbcType=TINYINT},
      timeout_status = #{timeoutStatus,jdbcType=INTEGER},
      settle_queue = #{settleQueue,jdbcType=VARCHAR},
      back_to_cs = #{backToCs,jdbcType=INTEGER},
      new_order_sn = #{newOrderSn,jdbcType=VARCHAR},
      return_reason = #{returnReason,jdbcType=VARCHAR},
      action_user = #{actionUser,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      bill_no = #{billNo,jdbcType=VARCHAR},
      disposition = #{disposition,jdbcType=INTEGER},
      return_allgoods_count = #{returnAllgoodsCount,jdbcType=INTEGER},
      pricediffer_goods_total = #{pricedifferGoodsTotal,jdbcType=INTEGER},
      return_total_fee = #{returnTotalFee,jdbcType=DECIMAL},
      total_price_difference = #{totalPriceDifference,jdbcType=DECIMAL},
      return_goods_money = #{returnGoodsMoney,jdbcType=DECIMAL},
      return_bonus_money = #{returnBonusMoney,jdbcType=DECIMAL},
      payment = #{payment,jdbcType=REAL},
      return_integral_money = #{returnIntegralMoney,jdbcType=DECIMAL},
      return_shipping = #{returnShipping,jdbcType=DECIMAL},
      return_tax = #{returnTax,jdbcType=DECIMAL},
      return_pack_money = #{returnPackMoney,jdbcType=DECIMAL},
      return_card = #{returnCard,jdbcType=DECIMAL},
      return_other_money = #{returnOtherMoney,jdbcType=DECIMAL},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      confirm_time = #{confirmTime,jdbcType=TIMESTAMP},
      clear_time = #{clearTime,jdbcType=TIMESTAMP},
      lock_time = #{lockTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      integral_money = #{integralMoney,jdbcType=DECIMAL},
      master_order_sn = #{masterOrderSn,jdbcType=VARCHAR},
      init_clear_time = #{initClearTime,jdbcType=TIMESTAMP},
      to_erp = #{toErp,jdbcType=TINYINT},
      storage_status = #{storageStatus,jdbcType=TINYINT},
      settle_status = #{settleStatus,jdbcType=TINYINT},
      site_code = #{siteCode,jdbcType=VARCHAR},
      shop_name = #{shopName,jdbcType=VARCHAR},
      bv_value = #{bvValue,jdbcType=INTEGER},
      points = #{points,jdbcType=DECIMAL},
      base_bv_value = #{baseBvValue,jdbcType=INTEGER},
      store_code = #{storeCode,jdbcType=VARCHAR},
      is_del = #{isDel,jdbcType=INTEGER},
      store_name = #{storeName,jdbcType=VARCHAR}，
      sellted_bill_status = #{selltedBillStatus}
    where return_sn = #{returnSn,jdbcType=VARCHAR}
  </update>
</mapper>
